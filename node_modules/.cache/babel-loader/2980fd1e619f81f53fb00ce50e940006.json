{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Question from \"./Question\";\nimport ScoreInformation from \"./ScoreInformation\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(_ref) {\n  _s();\n\n  let {\n    playerName\n  } = _ref;\n  const [question, setQuestion] = useState(JSON.parse(localStorage.getItem(\"firstQuestion\")[0]));\n  const [questionsList, setQuestionsList] = useState([]);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [questionComplete, setQuestionComplete] = useState(false);\n  const [correctAnswers, setcorrectAnswers] = useState(0);\n  const [playerAnswer, setPlayerAnswer] = useState(false);\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [fiftyFifty, setFiftyFifty] = useState(false);\n  const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true);\n  const [score, setScore] = useState({\n    name: playerName,\n    score: 0\n  });\n  const questionAmount = 1;\n  console.log(question);\n  useEffect(() => {\n    let q = fetch(`https://opentdb.com/api.php?amount=50&type=multiple`).then(res => res.json()).then(data => setQuestionsList(data.results));\n  }, []);\n  useEffect(() => {\n    setQuestion(questionsList[0]);\n    setPlayerAnswer(false);\n    setQuestionsList(prevList => {\n      prevList.splice(0, 1);\n      return prevList;\n    });\n  }, [newQuestion]);\n\n  async function handleQuestion(event, playerAnswer) {\n    if (questionComplete) return;\n    setPlayerAnswer(playerAnswer);\n    await timeout(1000);\n    setQuestionComplete(true);\n    await timeout(2000);\n    question.correct_answer === playerAnswer ? correctAnswer() : incorrectAnswer();\n    fiftyFifty && setFiftyFiftyStatus(false);\n    setFiftyFifty(false);\n  }\n\n  function handleFiftyFifty() {\n    setFiftyFifty(true);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  async function incorrectAnswer() {\n    setQuizComplete(true);\n    saveScoreLocal();\n  }\n\n  function saveScoreLocal() {\n    const savedScores = localStorage.getItem(\"score\");\n    const savedObj = JSON.parse(savedScores);\n    var exists = savedObj && Object.keys(savedObj).some(function (k) {\n      return savedObj[k].name === score.name;\n    });\n    exists ? saveCurrentPlayerScore(savedObj) : savedObj ? localStorage.setItem(\"score\", JSON.stringify([...savedObj, score])) : localStorage.setItem(\"score\", JSON.stringify([score]));\n  }\n\n  function saveCurrentPlayerScore(savedObj) {\n    savedObj.map(savedScore => {\n      if (savedScore.name === score.name) {\n        savedScore.score = score.score > savedScore.score ? score.score : savedScore.score;\n      }\n    });\n    localStorage.setItem(\"score\", JSON.stringify([...savedObj]));\n  }\n\n  async function correctAnswer() {\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: prev.score + 1\n    }));\n    setQuestionComplete(false);\n  }\n\n  function handleSubmission() {\n    quizComplete && newGame();\n  }\n\n  function newGame() {\n    setQuizComplete(false);\n    setQuestionComplete(false);\n    setFiftyFiftyStatus(true);\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: 0\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ScoreInformation, {\n        name: score.name,\n        score: score.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), question && /*#__PURE__*/_jsxDEV(Question, {\n        handleQuestion: handleQuestion,\n        question: question.question,\n        correct: question.correct_answer,\n        incorrect: question.incorrect_answers,\n        category: question.category,\n        questionComplete: questionComplete,\n        playerAnswer: playerAnswer,\n        fiftyFifty: fiftyFifty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu__items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lifelines__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Lifelines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lifelines__list\",\n            children: fiftyFiftyStatus && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"lifeLine\",\n              onClick: handleFiftyFifty,\n              children: \"50/50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu__container\",\n          children: [quizComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"question__menu__button\",\n            onClick: handleSubmission,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"question__menu__button\",\n              children: \"Back to main menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"doypIZi8vazvslYNeaUfUREiqTE=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Question","ScoreInformation","nanoid","Quiz","playerName","question","setQuestion","JSON","parse","localStorage","getItem","questionsList","setQuestionsList","quizComplete","setQuizComplete","questionComplete","setQuestionComplete","correctAnswers","setcorrectAnswers","playerAnswer","setPlayerAnswer","newQuestion","setNewQuestion","fiftyFifty","setFiftyFifty","fiftyFiftyStatus","setFiftyFiftyStatus","score","setScore","name","questionAmount","console","log","q","fetch","then","res","json","data","results","prevList","splice","handleQuestion","event","timeout","correct_answer","correctAnswer","incorrectAnswer","handleFiftyFifty","delay","Promise","setTimeout","saveScoreLocal","savedScores","savedObj","exists","Object","keys","some","k","saveCurrentPlayerScore","setItem","stringify","map","savedScore","prev","handleSubmission","newGame","incorrect_answers","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Question from \"./Question\";\r\nimport ScoreInformation from \"./ScoreInformation\";\r\nimport {nanoid} from \"nanoid\"\r\n\r\n\r\nfunction Quiz({playerName}) {\r\n    const [question, setQuestion] = useState(JSON.parse(localStorage.getItem(\"firstQuestion\")[0]));\r\n    const [questionsList, setQuestionsList] = useState([]);\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [questionComplete, setQuestionComplete] = useState(false)\r\n    const [correctAnswers, setcorrectAnswers] = useState(0)\r\n    const [playerAnswer, setPlayerAnswer] = useState(false)\r\n    const [newQuestion, setNewQuestion] = useState(0)\r\n    const [fiftyFifty, setFiftyFifty] = useState(false)\r\n    const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true)\r\n    const [score, setScore] = useState({\r\n        name: playerName,\r\n        score: 0\r\n\r\n    })\r\n    const questionAmount = 1;\r\n\r\n    console.log(question);\r\n\r\n    useEffect(() => {\r\n            let q = fetch(`https://opentdb.com/api.php?amount=50&type=multiple`)\r\n                .then(res => res.json())\r\n                .then(data =>setQuestionsList(data.results))\r\n            },[])\r\n        useEffect(() => {\r\n                setQuestion(questionsList[0]);\r\n                setPlayerAnswer(false);\r\n                setQuestionsList(prevList =>{\r\n                    prevList.splice(0,1)\r\n                    return prevList\r\n                })\r\n        },[newQuestion])\r\n\r\n        async function handleQuestion(event, playerAnswer) {\r\n            if (questionComplete) return;\r\n            setPlayerAnswer(playerAnswer)\r\n            await timeout(1000);\r\n            setQuestionComplete(true);\r\n            await timeout(2000);\r\n            question.correct_answer === playerAnswer ?\r\n            correctAnswer():\r\n            incorrectAnswer()\r\n            fiftyFifty && setFiftyFiftyStatus(false)\r\n            setFiftyFifty(false)\r\n         }\r\n\r\n        function handleFiftyFifty(){\r\n            setFiftyFifty(true);\r\n        }\r\n\r\n        function timeout(delay) {\r\n            return new Promise( res => setTimeout(res, delay) );\r\n        }\r\n\r\n        async function incorrectAnswer(){\r\n            setQuizComplete(true)\r\n            saveScoreLocal()\r\n        }\r\n\r\n        function saveScoreLocal(){\r\n            const savedScores = localStorage.getItem(\"score\");\r\n            const savedObj = JSON.parse(savedScores)\r\n\r\n        var exists = savedObj && \r\n            Object.keys(savedObj).some(function(k) {\r\n                return savedObj[k].name === score.name;\r\n            });\r\n        \r\n            exists ?\r\n            saveCurrentPlayerScore(savedObj)\r\n            :\r\n                savedObj ?\r\n                    localStorage.setItem(\"score\", JSON.stringify([\r\n                        ...savedObj,\r\n                        score\r\n                    ])) \r\n                :\r\n                    localStorage.setItem(\"score\", JSON.stringify([\r\n                        score\r\n                    ]))\r\n\r\n        }\r\n\r\n        function saveCurrentPlayerScore(savedObj){\r\n            savedObj.map(savedScore=>{\r\n                if(savedScore.name === score.name){\r\n                    savedScore.score = score.score > savedScore.score ? \r\n                    score.score :\r\n                    savedScore.score\r\n                    \r\n                }\r\n            }) \r\n\r\n            localStorage.setItem(\"score\", JSON.stringify([\r\n                ...savedObj\r\n            ]))\r\n        }\r\n\r\n\r\n    async function correctAnswer(){\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:prev.score+1\r\n            }));\r\n            setQuestionComplete(false)\r\n        \r\n        }\r\n   \r\n        function handleSubmission(){\r\n            quizComplete &&\r\n            newGame()\r\n        }\r\n\r\n        function newGame(){\r\n            setQuizComplete(false);\r\n            setQuestionComplete(false)\r\n            setFiftyFiftyStatus(true)\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:0\r\n            }));\r\n        }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                    <ScoreInformation name={score.name}  score={score.score} />\r\n                    {question && <Question  \r\n                    handleQuestion={handleQuestion} question={question.question} correct={question.correct_answer} \r\n                    incorrect={question.incorrect_answers} category={question.category}\r\n                    questionComplete={questionComplete} playerAnswer={playerAnswer} fiftyFifty={fiftyFifty}/> }\r\n                    \r\n                    <div class=\"menu__items\">\r\n                        <div className=\"lifelines__container\">\r\n                                <h4>Lifelines:</h4>\r\n                                <div className=\"lifelines__list\">\r\n                                    {fiftyFiftyStatus && <button className=\"lifeLine\" onClick={handleFiftyFifty}>50/50</button> }\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"menu__container\">\r\n                            {quizComplete && <button className=\"question__menu__button\" onClick={handleSubmission}>Play Again</button> }\r\n                            <a href=\"/\"><button className=\"question__menu__button\">Back to main menu</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}