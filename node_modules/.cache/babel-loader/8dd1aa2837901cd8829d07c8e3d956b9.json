{"ast":null,"code":"var CombinedStream = require('combined-stream');\n\nvar util = require('util');\n\nvar path = require('path');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar parseUrl = require('url').parse;\n\nvar fs = require('fs');\n\nvar mime = require('mime');\n\nvar async = require('async');\n\nmodule.exports = FormData;\n\nfunction FormData() {\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._lengthRetrievers = [];\n  CombinedStream.call(this);\n}\n\nutil.inherits(FormData, CombinedStream);\nFormData.LINE_BREAK = '\\r\\n';\n\nFormData.prototype.append = function (field, value, options) {\n  options = options || {};\n  var append = CombinedStream.prototype.append.bind(this); // all that streamy business can't handle numbers\n\n  if (typeof value == 'number') value = '' + value;\n\n  var header = this._multiPartHeader(field, value, options);\n\n  var footer = this._multiPartFooter(field, value, options);\n\n  append(header);\n  append(value);\n  append(footer); // pass along options.knownLength\n\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function (header, value, options) {\n  var valueLength = 0; // used w/ trackLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength; // @check why add CRLF? does this account for custom/multiple CRLFs?\n\n  this._overheadLength += Buffer.byteLength(header) + +FormData.LINE_BREAK.length; // empty or either doesn't have path or not an http response\n\n  if (!value || !value.path && !(value.readable && value.hasOwnProperty('httpVersion'))) {\n    return;\n  }\n\n  this._lengthRetrievers.push(function (next) {\n    // do we already know the size?\n    // 0 additional leaves value from getSyncLength()\n    if (options.knownLength != null) {\n      next(null, 0); // check if it's local file\n    } else if (value.hasOwnProperty('fd')) {\n      fs.stat(value.path, function (err, stat) {\n        if (err) {\n          next(err);\n          return;\n        }\n\n        next(null, stat.size);\n      }); // or http response\n    } else if (value.hasOwnProperty('httpVersion')) {\n      next(null, +value.headers['content-length']); // or request stream http://github.com/mikeal/request\n    } else if (value.hasOwnProperty('httpModule')) {\n      // wait till response come back\n      value.on('response', function (response) {\n        value.pause();\n        next(null, +response.headers['content-length']);\n      });\n      value.resume(); // something else\n    } else {\n      next('Unknown stream');\n    }\n  });\n};\n\nFormData.prototype._multiPartHeader = function (field, value, options) {\n  var boundary = this.getBoundary();\n  var header = ''; // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n\n  if (options.header != null) {\n    header = options.header;\n  } else {\n    header += '--' + boundary + FormData.LINE_BREAK + 'Content-Disposition: form-data; name=\"' + field + '\"'; // fs- and request- streams have path property\n    // or use custom filename and/or contentType\n    // TODO: Use request's response mime-type\n\n    if (options.filename || value.path) {\n      header += '; filename=\"' + path.basename(options.filename || value.path) + '\"' + FormData.LINE_BREAK + 'Content-Type: ' + (options.contentType || mime.lookup(options.filename || value.path)); // http response has not\n    } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n      header += '; filename=\"' + path.basename(value.client._httpMessage.path) + '\"' + FormData.LINE_BREAK + 'Content-Type: ' + value.headers['content-type'];\n    }\n\n    header += FormData.LINE_BREAK + FormData.LINE_BREAK;\n  }\n\n  return header;\n};\n\nFormData.prototype._multiPartFooter = function (field, value, options) {\n  return function (next) {\n    var footer = FormData.LINE_BREAK;\n    var lastPart = this._streams.length === 0;\n\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function () {\n  return '--' + this.getBoundary() + '--';\n};\n\nFormData.prototype.getHeaders = function (userHeaders) {\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (var header in userHeaders) {\n    formHeaders[header.toLowerCase()] = userHeaders[header];\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.getCustomHeaders = function (contentType) {\n  contentType = contentType ? contentType : 'multipart/form-data';\n  var formHeaders = {\n    'content-type': contentType + '; boundary=' + this.getBoundary(),\n    'content-length': this.getLengthSync()\n  };\n  return formHeaders;\n};\n\nFormData.prototype.getBoundary = function () {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype._generateBoundary = function () {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\nFormData.prototype.getLengthSync = function () {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  return knownLength;\n};\n\nFormData.prototype.getLength = function (cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._lengthRetrievers.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  async.parallel(this._lengthRetrievers, function (err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function (length) {\n      knownLength += length;\n    });\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function (params, cb) {\n  this.getLength(function (err, length) {\n    var request,\n        options,\n        defaults = {\n      method: 'post',\n      port: 80,\n      headers: this.getHeaders({\n        'Content-Length': length\n      })\n    }; // parse provided url if it's string\n    // or treat it as options object\n\n    if (typeof params == 'string') {\n      params = parseUrl(params);\n      options = populate({\n        port: params.port,\n        path: params.pathname,\n        host: params.hostname\n      }, defaults);\n    } else // use custom params\n      {\n        options = populate(params, defaults);\n      } // https if specified, fallback to http in any other case\n\n\n    if (params.protocol == 'https:') {\n      // override default port\n      if (!params.port) options.port = 443;\n      request = https.request(options);\n    } else {\n      request = http.request(options);\n    }\n\n    this.pipe(request);\n\n    if (cb) {\n      request.on('error', cb);\n      request.on('response', cb.bind(this, null));\n    }\n\n    return request;\n  }.bind(this));\n};\n/*\n * Santa's little helpers\n */\n// populates missing values\n\n\nfunction populate(dst, src) {\n  for (var prop in src) {\n    if (!dst[prop]) dst[prop] = src[prop];\n  }\n\n  return dst;\n}","map":{"version":3,"sources":["C:/react/quiz/node_modules/request/node_modules/form-data/lib/form_data.js"],"names":["CombinedStream","require","util","path","http","https","parseUrl","parse","fs","mime","async","module","exports","FormData","_overheadLength","_valueLength","_lengthRetrievers","call","inherits","LINE_BREAK","prototype","append","field","value","options","bind","header","_multiPartHeader","footer","_multiPartFooter","_trackLength","valueLength","knownLength","Buffer","isBuffer","length","byteLength","readable","hasOwnProperty","push","next","stat","err","size","headers","on","response","pause","resume","boundary","getBoundary","filename","basename","contentType","lookup","client","_httpMessage","lastPart","_streams","_lastBoundary","getHeaders","userHeaders","formHeaders","toLowerCase","getCustomHeaders","getLengthSync","_boundary","_generateBoundary","i","Math","floor","random","toString","getLength","cb","process","nextTick","parallel","values","forEach","submit","params","request","defaults","method","port","populate","pathname","host","hostname","protocol","pipe","dst","src","prop"],"mappings":"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","sourcesContent":["var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime');\nvar async = require('async');\n\nmodule.exports = FormData;\nfunction FormData() {\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._lengthRetrievers = [];\n\n  CombinedStream.call(this);\n}\nutil.inherits(FormData, CombinedStream);\n\nFormData.LINE_BREAK = '\\r\\n';\n\nFormData.prototype.append = function(field, value, options) {\n  options = options || {};\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') value = ''+value;\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter(field, value, options);\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ trackLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    + FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  this._lengthRetrievers.push(function(next) {\n\n    // do we already know the size?\n    // 0 additional leaves value from getSyncLength()\n    if (options.knownLength != null) {\n      next(null, 0);\n\n    // check if it's local file\n    } else if (value.hasOwnProperty('fd')) {\n      fs.stat(value.path, function(err, stat) {\n        if (err) {\n          next(err);\n          return;\n        }\n\n        next(null, stat.size);\n      });\n\n    // or http response\n    } else if (value.hasOwnProperty('httpVersion')) {\n      next(null, +value.headers['content-length']);\n\n    // or request stream http://github.com/mikeal/request\n    } else if (value.hasOwnProperty('httpModule')) {\n      // wait till response come back\n      value.on('response', function(response) {\n        value.pause();\n        next(null, +response.headers['content-length']);\n      });\n      value.resume();\n\n    // something else\n    } else {\n      next('Unknown stream');\n    }\n  });\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  var boundary = this.getBoundary();\n  var header = '';\n\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (options.header != null) {\n    header = options.header;\n  } else {\n    header += '--' + boundary + FormData.LINE_BREAK +\n      'Content-Disposition: form-data; name=\"' + field + '\"';\n\n    // fs- and request- streams have path property\n    // or use custom filename and/or contentType\n    // TODO: Use request's response mime-type\n    if (options.filename || value.path) {\n      header +=\n        '; filename=\"' + path.basename(options.filename || value.path) + '\"' + FormData.LINE_BREAK +\n        'Content-Type: ' +  (options.contentType || mime.lookup(options.filename || value.path));\n\n    // http response has not\n    } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n      header +=\n        '; filename=\"' + path.basename(value.client._httpMessage.path) + '\"' + FormData.LINE_BREAK +\n        'Content-Type: ' + value.headers['content-type'];\n    }\n\n    header += FormData.LINE_BREAK + FormData.LINE_BREAK;\n  }\n\n  return header;\n};\n\nFormData.prototype._multiPartFooter = function(field, value, options) {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--';\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (var header in userHeaders) {\n    formHeaders[header.toLowerCase()] = userHeaders[header];\n  }\n\n  return formHeaders;\n}\n\nFormData.prototype.getCustomHeaders = function(contentType) {\n    contentType = contentType ? contentType : 'multipart/form-data';\n\n    var formHeaders = {\n        'content-type': contentType + '; boundary=' + this.getBoundary(),\n        'content-length': this.getLengthSync()\n    };\n\n    return formHeaders;\n}\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\nFormData.prototype.getLengthSync = function() {\n    var knownLength = this._overheadLength + this._valueLength;\n\n    if (this._streams.length) {\n        knownLength += this._lastBoundary().length;\n    }\n\n    return knownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._lengthRetrievers.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  async.parallel(this._lengthRetrievers, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  this.getLength(function(err, length) {\n\n    var request\n      , options\n      , defaults = {\n          method : 'post',\n          port   : 80,\n          headers: this.getHeaders({'Content-Length': length})\n      };\n\n    // parse provided url if it's string\n    // or treat it as options object\n    if (typeof params == 'string') {\n      params = parseUrl(params);\n\n      options = populate({\n        port: params.port,\n        path: params.pathname,\n        host: params.hostname\n      }, defaults);\n    }\n    else // use custom params\n    {\n      options = populate(params, defaults);\n    }\n\n    // https if specified, fallback to http in any other case\n    if (params.protocol == 'https:') {\n      // override default port\n      if (!params.port) options.port = 443;\n      request = https.request(options);\n    } else {\n      request = http.request(options);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      request.on('error', cb);\n      request.on('response', cb.bind(this, null));\n    }\n\n    return request;\n  }.bind(this));\n};\n\n/*\n * Santa's little helpers\n */\n\n// populates missing values\nfunction populate(dst, src) {\n  for (var prop in src) {\n    if (!dst[prop]) dst[prop] = src[prop];\n  }\n  return dst;\n}\n"]},"metadata":{},"sourceType":"script"}