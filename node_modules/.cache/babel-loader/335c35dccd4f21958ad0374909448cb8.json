{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Question from \"./Question\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(_ref) {\n  _s();\n\n  let {\n    playerName\n  } = _ref;\n  const [question, setQuestion] = useState([]);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [questionComplete, setQuestionComplete] = useState(false);\n  const [correctAnswers, setcorrectAnswers] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [fiftyFifty, setFiftyFifty] = useState(false);\n  const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true);\n  const [score, setScore] = useState({\n    name: playerName,\n    score: 0\n  });\n  const questionAmount = 1;\n  var defaultPlayerAnswers = [];\n\n  for (let x = 0; x < questionAmount; x++) {\n    defaultPlayerAnswers.push({\n      questionNum: x,\n      answer: false\n    });\n  }\n\n  const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\n  useEffect(() => {\n    let q = fetch(`https://opentdb.com/api.php?amount=2&type=multiple`).then(res => res.json()).then(data => setQuestion(data.results));\n  }, []); // useEffect(() => {\n  //         let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}&type=multiple`)\n  //             .then(res => res.json())\n  //             .then(data => setNextQuestions(data.results))\n  //         },[newQuestion])\n\n  async function handleQuestion(event, playerAnswer) {\n    await timeout(1000);\n    setQuestionComplete(true);\n    await timeout(2000);\n    questions[0].correct_answer === playerAnswer ? correctAnswer() : incorrectAnswer();\n    fiftyFifty && setFiftyFiftyStatus(false);\n    setFiftyFifty(false);\n  }\n\n  function handleFiftyFifty() {\n    setFiftyFifty(true);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  async function incorrectAnswer() {\n    setQuizComplete(true);\n    saveScoreLocal();\n  }\n\n  function saveScoreLocal() {\n    const savedScores = localStorage.getItem(\"score\");\n    const savedObj = JSON.parse(savedScores);\n    var exists = savedObj && Object.keys(savedObj).some(function (k) {\n      return savedObj[k].name === score.name;\n    });\n    exists ? saveCurrentPlayerScore(savedObj) : savedObj ? localStorage.setItem(\"score\", JSON.stringify([...savedObj, score])) : localStorage.setItem(\"score\", JSON.stringify([score]));\n  }\n\n  function saveCurrentPlayerScore(savedObj) {\n    savedObj.map(savedScore => {\n      if (savedScore.name === score.name) {\n        savedScore.score = score.score;\n      }\n    });\n    localStorage.setItem(\"score\", JSON.stringify([...savedObj]));\n  }\n\n  async function correctAnswer() {\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: prev.score + 1\n    }));\n    setQuestionComplete(false);\n  }\n\n  function checkScores() {\n    setcorrectAnswers(0);\n    playersAnswers.map(answer => {\n      return answer.answer === question[answer.questionNum].correct_answer ? setcorrectAnswers(prev => prev + 1) : correctAnswers;\n    });\n    setQuizComplete(true);\n  }\n\n  function handleSubmission() {\n    quizComplete ? newGame() : checkScores();\n  }\n\n  function newGame() {\n    setQuizComplete(false);\n    setQuestionComplete(false);\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: 0\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        playerAnswer: playersAnswers[`${key}`],\n        handleQuestion: handleQuestion,\n        question: question.question,\n        correct: question.correct_answer,\n        incorrect: question.incorrect_answers,\n        category: question.category,\n        questionComplete: questionComplete,\n        fiftyFifty: fiftyFifty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), quizComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmission,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Back to main menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Name \", score.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score \", score.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), fiftyFiftyStatus && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFiftyFifty,\n        children: \"50/50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"AZj83WrEVET6r1KgttIWecor4i4=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Question","nanoid","Quiz","playerName","question","setQuestion","quizComplete","setQuizComplete","questionComplete","setQuestionComplete","correctAnswers","setcorrectAnswers","newQuestion","setNewQuestion","fiftyFifty","setFiftyFifty","fiftyFiftyStatus","setFiftyFiftyStatus","score","setScore","name","questionAmount","defaultPlayerAnswers","x","push","questionNum","answer","playersAnswers","setPlayersAnswers","q","fetch","then","res","json","data","results","handleQuestion","event","playerAnswer","timeout","questions","correct_answer","correctAnswer","incorrectAnswer","handleFiftyFifty","delay","Promise","setTimeout","saveScoreLocal","savedScores","localStorage","getItem","savedObj","JSON","parse","exists","Object","keys","some","k","saveCurrentPlayerScore","setItem","stringify","map","savedScore","prev","checkScores","handleSubmission","newGame","key","incorrect_answers","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Question from \"./Question\";\r\nimport {nanoid} from \"nanoid\"\r\n\r\n\r\nfunction Quiz({playerName}) {\r\n    const [question, setQuestion] = useState([]);\r\n\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [questionComplete, setQuestionComplete] = useState(false)\r\n    const [correctAnswers, setcorrectAnswers] = useState(0)\r\n    const [newQuestion, setNewQuestion] = useState(0)\r\n    const [fiftyFifty, setFiftyFifty] = useState(false)\r\n    const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true)\r\n    const [score, setScore] = useState({\r\n        name: playerName,\r\n        score: 0\r\n\r\n    })\r\n    \r\n    const questionAmount = 1;\r\n    var defaultPlayerAnswers = [];\r\n\r\n    for (let x = 0; x < questionAmount; x++) {\r\n        defaultPlayerAnswers.push({questionNum: x, answer:false});\r\n    }\r\n\r\n    const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\r\n\r\n    useEffect(() => {\r\n        let q = fetch(`https://opentdb.com/api.php?amount=2&type=multiple`)\r\n            .then(res => res.json())\r\n            .then(data => setQuestion(data.results))\r\n        },[])\r\n\r\n    // useEffect(() => {\r\n    //         let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}&type=multiple`)\r\n    //             .then(res => res.json())\r\n    //             .then(data => setNextQuestions(data.results))\r\n    //         },[newQuestion])\r\n\r\n        async function handleQuestion(event, playerAnswer){\r\n            await timeout(1000);\r\n            setQuestionComplete(true);\r\n            await timeout(2000);\r\n\r\n            questions[0].correct_answer === playerAnswer ?\r\n            correctAnswer():\r\n            incorrectAnswer()\r\n            fiftyFifty && setFiftyFiftyStatus(false)\r\n            setFiftyFifty(false)\r\n        }\r\n\r\n        function handleFiftyFifty(){\r\n            setFiftyFifty(true);\r\n        }\r\n\r\n        function timeout(delay) {\r\n            return new Promise( res => setTimeout(res, delay) );\r\n        }\r\n\r\n        async function incorrectAnswer(){\r\n            setQuizComplete(true)\r\n            saveScoreLocal()\r\n        }\r\n\r\n        function saveScoreLocal(){\r\n            const savedScores = localStorage.getItem(\"score\");\r\n            const savedObj = JSON.parse(savedScores)\r\n\r\n        var exists = savedObj && \r\n            Object.keys(savedObj).some(function(k) {\r\n                return savedObj[k].name === score.name;\r\n            });\r\n        \r\n            exists ?\r\n            saveCurrentPlayerScore(savedObj)\r\n            :\r\n                savedObj ?\r\n                    localStorage.setItem(\"score\", JSON.stringify([\r\n                        ...savedObj,\r\n                        score\r\n                    ])) \r\n                :\r\n                    localStorage.setItem(\"score\", JSON.stringify([\r\n                        score\r\n                    ]))\r\n\r\n        }\r\n\r\n        function saveCurrentPlayerScore(savedObj){\r\n            savedObj.map(savedScore=>{\r\n                if(savedScore.name === score.name){\r\n                    savedScore.score = score.score\r\n                }\r\n            }) \r\n            localStorage.setItem(\"score\", JSON.stringify([\r\n                ...savedObj\r\n            ]))\r\n        }\r\n\r\n\r\n    async function correctAnswer(){\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:prev.score+1\r\n            }));\r\n            setQuestionComplete(false)\r\n        \r\n        }\r\n        function checkScores(){\r\n            setcorrectAnswers(0)\r\n            playersAnswers.map(answer =>{\r\n                return answer.answer === question[answer.questionNum].correct_answer ? setcorrectAnswers(prev=>prev+1) : correctAnswers;\r\n            })\r\n            setQuizComplete(true) \r\n        }\r\n\r\n        function handleSubmission(){\r\n            quizComplete ?\r\n            newGame(): \r\n            checkScores() ;\r\n        }\r\n\r\n        function newGame(){\r\n            setQuizComplete(false);\r\n            setQuestionComplete(false)\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:0\r\n            }));\r\n        }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                    <Question playerAnswer={playersAnswers[`${key}`]} \r\n                    handleQuestion={handleQuestion} question={question.question} correct={question.correct_answer} \r\n                    incorrect={question.incorrect_answers} category={question.category}\r\n                    questionComplete={questionComplete} fiftyFifty={fiftyFifty}/>\r\n\r\n                {quizComplete && <button onClick={handleSubmission}>Play Again</button> }\r\n                <a href=\"/\"><button>Back to main menu</button></a>\r\n\r\n                <h4>Name {score.name}</h4>\r\n                <h4>Score {score.score}</h4>\r\n\r\n                {fiftyFiftyStatus && <button onClick={handleFiftyFifty}>50/50</button> }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}