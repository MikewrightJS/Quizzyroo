{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Question from \"./Question\";\nimport ScoreInformation from \"./ScoreInformation\";\nimport { nanoid } from \"nanoid\";\nimport { db } from \"../firebase-config\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(_ref) {\n  _s();\n\n  let {\n    playerName\n  } = _ref;\n  const [question, setQuestion] = useState(false);\n  const [globalScores, setGlobalScores] = useState({});\n  const [questionsList, setQuestionsList] = useState([]);\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [questionComplete, setQuestionComplete] = useState(false);\n  const [preventMultiClick, setPreventMultiClick] = useState(true);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [playerAnswer, setPlayerAnswer] = useState(false);\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [difficulty, setDifficulty] = useState(\"easy\");\n  const [fiftyFifty, setFiftyFifty] = useState(false);\n  const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true);\n  const [score, setScore] = useState({\n    name: playerName,\n    score: 0\n  });\n  const questionAmount = 1;\n  const scoreCollectionRef = collection(db, \"highscores\");\n  console.log(preventMultiClick, questionComplete);\n  useEffect(() => {\n    let q = fetch(`https://opentdb.com/api.php?amount=50&type=multiple&${difficulty}`).then(res => res.json()).then(data => setQuestionsList(data.results));\n  }, [difficulty]);\n  useEffect(() => {\n    setQuestion(questionsList[0]);\n    setQuestionNumber(prev => prev + 1);\n    setPlayerAnswer(false);\n    setPreventMultiClick(false);\n    setQuestionsList(prevList => {\n      prevList.splice(0, 1);\n      return prevList;\n    });\n    questionNumber == 7 && setDifficulty(\"medium\");\n    questionNumber == 14 && setDifficulty(\"hard\");\n  }, [newQuestion]);\n  useEffect(() => {\n    const getScores = async () => {\n      const data = await getDocs(scoreCollectionRef);\n      setGlobalScores(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getScores();\n  }, []);\n  question == undefined && setQuestion(JSON.parse(localStorage.getItem(\"firstQuestion\"))[0]);\n\n  async function handleQuestion(event, playerAnswer) {\n    if (questionComplete && preventMultiClick) return;\n    setPreventMultiClick(false);\n    setPlayerAnswer(playerAnswer);\n    await timeout(1000);\n    setQuestionComplete(true);\n    await timeout(2000);\n    question.correct_answer === playerAnswer ? correctAnswer() : incorrectAnswer();\n    fiftyFifty && setFiftyFiftyStatus(false);\n    setFiftyFifty(false);\n  }\n\n  function handleFiftyFifty() {\n    setFiftyFifty(true);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  async function incorrectAnswer() {\n    setQuizComplete(true);\n    setQuestionNumber(0);\n    saveScoreGlobal();\n  }\n\n  const saveScoreGlobal = async () => {\n    var exists = globalScores && Object.keys(globalScores).some(function (k) {\n      return globalScores[k].name === score.name;\n    });\n\n    if (exists) {\n      const player = getPlayerFromHighscore(globalScores, score.name);\n\n      if (score.score > player.score) {\n        const userDoc = doc(db, \"highscores\", player.id);\n        console.log(userDoc);\n        await deleteDoc(userDoc);\n        await addDoc(scoreCollectionRef, score);\n      }\n    } else {\n      await addDoc(scoreCollectionRef, score);\n    }\n  };\n\n  function getPlayerFromHighscore(obj, value) {\n    let result;\n    Object.getOwnPropertyNames(obj).some(key => {\n      if (obj[key].name === score.name) {\n        result = obj[key];\n        return true; // Stops the loop\n      }\n    });\n    return result;\n  } // function saveScoreLocal(){\n  //     const savedScores = localStorage.getItem(\"score\");\n  //     const savedObj = JSON.parse(savedScores)\n  // var exists = savedObj && \n  //     Object.keys(savedObj).some(function(k) {\n  //         return savedObj[k].name === score.name;\n  //     });\n  //     exists ?\n  //     saveCurrentPlayerScore(savedObj)\n  //     :\n  //         savedObj ?\n  //             localStorage.setItem(\"score\", JSON.stringify([\n  //                 ...savedObj,\n  //                 score\n  //             ])) \n  //         :\n  //             localStorage.setItem(\"score\", JSON.stringify([\n  //                 score\n  //             ]))\n  // }\n\n\n  function saveCurrentPlayerScore(savedObj) {\n    savedObj.map(savedScore => {\n      if (savedScore.name === score.name) {\n        savedScore.score = score.score > savedScore.score ? score.score : savedScore.score;\n      }\n    });\n    localStorage.setItem(\"score\", JSON.stringify([...savedObj]));\n  }\n\n  async function correctAnswer() {\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: prev.score + 1\n    }));\n  }\n\n  function handleSubmission() {\n    quizComplete && newGame();\n  }\n\n  function newGame() {\n    setQuizComplete(false);\n    setQuestionComplete(false);\n    setFiftyFiftyStatus(true);\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: 0\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ScoreInformation, {\n        name: score.name,\n        score: score.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), question && /*#__PURE__*/_jsxDEV(Question, {\n        handleQuestion: handleQuestion,\n        difficulty: difficulty,\n        question: question.question,\n        correct: question.correct_answer,\n        incorrect: question.incorrect_answers,\n        category: question.category,\n        questionComplete: questionComplete,\n        playerAnswer: playerAnswer,\n        fiftyFifty: fiftyFifty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu__items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lifelines__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Lifelines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lifelines__list\",\n            children: fiftyFiftyStatus && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"lifeLine\",\n              onClick: handleFiftyFifty,\n              children: \"50/50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu__container\",\n          children: [quizComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"question__menu__button\",\n            onClick: handleSubmission,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"question__menu__button\",\n              children: \"Back to main menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"r93o/uYoUw+9lgxE0sXaHSTWX/s=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Question","ScoreInformation","nanoid","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","Quiz","playerName","question","setQuestion","globalScores","setGlobalScores","questionsList","setQuestionsList","questionNumber","setQuestionNumber","quizComplete","setQuizComplete","questionComplete","setQuestionComplete","preventMultiClick","setPreventMultiClick","correctAnswers","setCorrectAnswers","playerAnswer","setPlayerAnswer","newQuestion","setNewQuestion","difficulty","setDifficulty","fiftyFifty","setFiftyFifty","fiftyFiftyStatus","setFiftyFiftyStatus","score","setScore","name","questionAmount","scoreCollectionRef","console","log","q","fetch","then","res","json","data","results","prev","prevList","splice","getScores","docs","map","id","undefined","JSON","parse","localStorage","getItem","handleQuestion","event","timeout","correct_answer","correctAnswer","incorrectAnswer","handleFiftyFifty","delay","Promise","setTimeout","saveScoreGlobal","exists","Object","keys","some","k","player","getPlayerFromHighscore","userDoc","obj","value","result","getOwnPropertyNames","key","saveCurrentPlayerScore","savedObj","savedScore","setItem","stringify","handleSubmission","newGame","incorrect_answers","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Question from \"./Question\";\r\nimport ScoreInformation from \"./ScoreInformation\";\r\nimport {nanoid} from \"nanoid\"\r\nimport { db } from \"../firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\n\r\nfunction Quiz({playerName}) {\r\n    const [question, setQuestion] = useState(false);\r\n    const [globalScores, setGlobalScores] = useState({})\r\n    const [questionsList, setQuestionsList] = useState([]);\r\n    const [questionNumber, setQuestionNumber] = useState(0)\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [questionComplete, setQuestionComplete] = useState(false)\r\n    const [preventMultiClick, setPreventMultiClick] = useState(true)\r\n    const [correctAnswers, setCorrectAnswers] = useState(0)\r\n    const [playerAnswer, setPlayerAnswer] = useState(false)\r\n    const [newQuestion, setNewQuestion] = useState(0)\r\n    const [difficulty, setDifficulty] = useState(\"easy\")\r\n    const [fiftyFifty, setFiftyFifty] = useState(false)\r\n    const [fiftyFiftyStatus, setFiftyFiftyStatus] = useState(true)\r\n    const [score, setScore] = useState({\r\n        name: playerName,\r\n        score: 0\r\n\r\n    })\r\n    const questionAmount = 1;\r\n    const scoreCollectionRef = collection(db,\"highscores\")\r\n\r\n    console.log(preventMultiClick,questionComplete)\r\n    \r\n    useEffect(() => {\r\n            let q = fetch(`https://opentdb.com/api.php?amount=50&type=multiple&${difficulty}`)\r\n                .then(res => res.json())\r\n                .then(data =>setQuestionsList(data.results))\r\n    },[difficulty])\r\n\r\n    useEffect(() => {\r\n                setQuestion(questionsList[0]);\r\n                setQuestionNumber(prev=>prev+1)\r\n                setPlayerAnswer(false);\r\n                setPreventMultiClick(false)\r\n                setQuestionsList(prevList =>{\r\n                    prevList.splice(0,1)\r\n                    return prevList\r\n                })\r\n                questionNumber == 7 && setDifficulty(\"medium\")\r\n                questionNumber == 14 && setDifficulty(\"hard\")\r\n        },[newQuestion])\r\n\r\n        useEffect(() => {\r\n            const getScores = async() =>{\r\n                const data = await getDocs(scoreCollectionRef);\r\n                setGlobalScores(data.docs.map((doc) =>({\r\n                  ...doc.data(), id:doc.id\r\n                })))}\r\n                getScores();\r\n            },[])\r\n    \r\n    question == undefined && setQuestion(JSON.parse(localStorage.getItem(\"firstQuestion\"))[0])\r\n\r\n        async function handleQuestion(event, playerAnswer) {\r\n            if (questionComplete && preventMultiClick) return;\r\n            setPreventMultiClick(false);\r\n            setPlayerAnswer(playerAnswer)\r\n            await timeout(1000);\r\n            setQuestionComplete(true);\r\n            await timeout(2000);\r\n            question.correct_answer === playerAnswer ?\r\n            correctAnswer():\r\n            incorrectAnswer()\r\n            fiftyFifty && setFiftyFiftyStatus(false)\r\n            setFiftyFifty(false)\r\n         }\r\n\r\n        function handleFiftyFifty(){\r\n            setFiftyFifty(true);\r\n        }\r\n\r\n        function timeout(delay) {\r\n            return new Promise( res => setTimeout(res, delay) );\r\n        }\r\n\r\n        async function incorrectAnswer(){\r\n            setQuizComplete(true)\r\n            setQuestionNumber(0)\r\n            saveScoreGlobal()\r\n        }\r\n\r\n        const saveScoreGlobal = async () => {\r\n            var exists = globalScores && \r\n            Object.keys(globalScores).some(function(k) {\r\n                return globalScores[k].name === score.name;\r\n            });\r\n\r\n            if(exists){\r\n                const player = getPlayerFromHighscore(globalScores, score.name)\r\n                if(score.score > player.score){\r\n                    const userDoc = doc(db, \"highscores\", player.id);\r\n                    console.log(userDoc)\r\n                    await deleteDoc(userDoc);\r\n                    await addDoc(scoreCollectionRef, score);\r\n                }\r\n            }else{\r\n                await addDoc(scoreCollectionRef, score);\r\n\r\n            }\r\n        };\r\n\r\n        function getPlayerFromHighscore(obj, value) {\r\n            let result;\r\n            Object.getOwnPropertyNames(obj).some(key => {\r\n              if (obj[key].name === score.name) {\r\n                result = obj[key];\r\n                return true; // Stops the loop\r\n              }\r\n            });\r\n            return result;\r\n          }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n        \r\n\r\n        // function saveScoreLocal(){\r\n        //     const savedScores = localStorage.getItem(\"score\");\r\n        //     const savedObj = JSON.parse(savedScores)\r\n\r\n        // var exists = savedObj && \r\n        //     Object.keys(savedObj).some(function(k) {\r\n        //         return savedObj[k].name === score.name;\r\n        //     });\r\n        \r\n        //     exists ?\r\n        //     saveCurrentPlayerScore(savedObj)\r\n        //     :\r\n        //         savedObj ?\r\n        //             localStorage.setItem(\"score\", JSON.stringify([\r\n        //                 ...savedObj,\r\n        //                 score\r\n        //             ])) \r\n        //         :\r\n        //             localStorage.setItem(\"score\", JSON.stringify([\r\n        //                 score\r\n        //             ]))\r\n\r\n        // }\r\n\r\n        function saveCurrentPlayerScore(savedObj){\r\n            savedObj.map(savedScore=>{\r\n                if(savedScore.name === score.name){\r\n                    savedScore.score = score.score > savedScore.score ? \r\n                    score.score :\r\n                    savedScore.score\r\n                    \r\n                }\r\n            }) \r\n\r\n            localStorage.setItem(\"score\", JSON.stringify([\r\n                ...savedObj\r\n            ]))\r\n        }\r\n\r\n\r\n    async function correctAnswer(){\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:prev.score+1\r\n            }));\r\n        }\r\n   \r\n        function handleSubmission(){\r\n            quizComplete &&\r\n            newGame()\r\n        }\r\n\r\n        function newGame(){\r\n            setQuizComplete(false);\r\n            setQuestionComplete(false)\r\n            setFiftyFiftyStatus(true)\r\n            setNewQuestion(prev=>prev+1)\r\n            setScore(prev=>({\r\n                ...prev,\r\n                score:0\r\n            }));\r\n        }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                    <ScoreInformation name={score.name}  score={score.score} />\r\n                    {question && <Question  \r\n                    handleQuestion={handleQuestion} difficulty={difficulty} question={question.question} correct={question.correct_answer} \r\n                    incorrect={question.incorrect_answers} category={question.category}\r\n                    questionComplete={questionComplete} playerAnswer={playerAnswer} fiftyFifty={fiftyFifty}/> }\r\n                    \r\n                    <div class=\"menu__items\">\r\n                        <div className=\"lifelines__container\">\r\n                                <h4>Lifelines:</h4>\r\n                                <div className=\"lifelines__list\">\r\n                                    {fiftyFiftyStatus && <button className=\"lifeLine\" onClick={handleFiftyFifty}>50/50</button> }\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"menu__container\">\r\n                            {quizComplete && <button className=\"question__menu__button\" onClick={handleSubmission}>Play Again</button> }\r\n                            <a href=\"/\"><button className=\"question__menu__button\">Back to main menu</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}