{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    question,\n    correct,\n    incorrect,\n    category,\n    handleQuestion,\n    questionComplete,\n    fiftyFifty\n  } = _ref;\n  const [shuffAnswers, setShuffAnswers] = useState(false);\n  useEffect(() => {\n    setQuestion(questionsList[0]);\n    setQuestionsList(prevList => {\n      prevList.splice(0, 1);\n      return prevList;\n    });\n  }, [question]);\n  let answers = fiftyFifty ? [incorrect[Math.floor(Math.random() * 2)], correct] : incorrect.concat(correct);\n  const shuffledArray = answers.sort((a, b) => 0.5 - Math.random());\n  console.log(shuffAnswers);\n  !shuffAnswers && setShuffAnswers(shuffledArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: shuffAnswers && shuffAnswers.map(answer => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          dangerouslySetInnerHTML: {\n            __html: answer\n          },\n          onClick: e => handleQuestion(e, answer),\n          className: questionComplete && answer === correct ? 'green answer' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Question, \"Gen1k37cQsb2u82T18BvFNAbb/k=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Question.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Switch","useState","Question","question","correct","incorrect","category","handleQuestion","questionComplete","fiftyFifty","shuffAnswers","setShuffAnswers","setQuestion","questionsList","setQuestionsList","prevList","splice","answers","Math","floor","random","concat","shuffledArray","sort","a","b","console","log","__html","map","answer","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAIA,SAASC,QAAT,OAA0G;AAAA;;AAAA,MAAxF;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,cAAzC;AAAyDC,IAAAA,gBAAzD;AAA2EC,IAAAA;AAA3E,GAAwF;AACxG,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAACC,aAAa,CAAC,CAAD,CAAd,CAAX;AACAC,IAAAA,gBAAgB,CAACC,QAAQ,IAAG;AACxBA,MAAAA,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAkB,CAAlB;AACA,aAAOD,QAAP;AACH,KAHe,CAAhB;AAIH,GANU,EAMT,CAACZ,QAAD,CANS,CAAT;AAQE,MAAIc,OAAO,GAAGR,UAAU,GAAE,CAACJ,SAAS,CAACa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV,EAA0ChB,OAA1C,CAAF,GAAuDC,SAAS,CAACgB,MAAV,CAAiBjB,OAAjB,CAA/E;AACA,QAAMkB,aAAa,GAAGL,OAAO,CAACM,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU,MAAMP,IAAI,CAACE,MAAL,EAA7B,CAAtB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;AACA,GAACA,YAAD,IAAiBC,eAAe,CAACW,aAAD,CAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,gBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAK,MAAA,uBAAuB,EAAG;AAACsB,QAAAA,MAAM,EAAEzB;AAAT;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACCO,YAAY,IAAIA,YAAY,CAACmB,GAAb,CAAiBC,MAAM,IAAE;AACtC,4BAAO;AAAQ,UAAA,uBAAuB,EAAG;AAACF,YAAAA,MAAM,EAAEE;AAAT,WAAlC;AACP,UAAA,OAAO,EAAEC,CAAC,IAAIxB,cAAc,CAACwB,CAAD,EAAID,MAAJ,CADrB;AAEP,UAAA,SAAS,EACPtB,gBAAgB,IAChBsB,MAAM,KAAK1B,OADX,GACqB,cADrB,GACsC;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH,OATgB;AADjB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjCMF,Q;;KAAAA,Q;AAmCP,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\n\r\n\r\nfunction Question({question, correct, incorrect, category, handleQuestion, questionComplete, fiftyFifty}) {\r\n  const [shuffAnswers, setShuffAnswers] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setQuestion(questionsList[0]);\r\n    setQuestionsList(prevList =>{\r\n        prevList.splice(0,1)\r\n        return prevList\r\n    })\r\n},[question])\r\n\r\n    let answers = fiftyFifty? [incorrect[Math.floor(Math.random() * 2)],correct] : incorrect.concat(correct);\r\n    const shuffledArray = answers.sort((a, b) => 0.5 - Math.random());\r\n    console.log(shuffAnswers);\r\n    !shuffAnswers && setShuffAnswers(shuffledArray)\r\n    return (\r\n      <div className=\"question\">\r\n          <h3>{category}</h3>\r\n        <div dangerouslySetInnerHTML ={{__html: question}}></div>\r\n        <div className=\"answers\">\r\n        {shuffAnswers && shuffAnswers.map(answer=>{\r\n            return <button dangerouslySetInnerHTML ={{__html: answer}} \r\n            onClick={e => handleQuestion(e, answer )} \r\n            className={\r\n              questionComplete &&\r\n              answer === correct ? 'green answer' : ''\r\n            }>\r\n                \r\n                </button>\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Question;"]},"metadata":{},"sourceType":"module"}