{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Question.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  let {\n    question,\n    correct,\n    incorrect,\n    category,\n    handleQuestion,\n    questionComplete,\n    fiftyFifty\n  } = _ref;\n  let answers = shuffle(fiftyFifty ? [incorrect[Math.floor(Math.random() * 2)], correct] : incorrect.concat(correct));\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers.map(answer => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          dangerouslySetInnerHTML: {\n            __html: answer\n          },\n          onClick: e => handleQuestion(e, answer),\n          className: questionComplete && answer === correct ? 'green answer' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Question.js"],"names":["React","BrowserRouter","Router","Route","Switch","Question","question","correct","incorrect","category","handleQuestion","questionComplete","fiftyFifty","answers","shuffle","Math","floor","random","concat","a","i","length","j","__html","map","answer","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;;;AAGA,SAASC,QAAT,OAA0G;AAAA,MAAxF;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,cAAzC;AAAyDC,IAAAA,gBAAzD;AAA2EC,IAAAA;AAA3E,GAAwF;AACtG,MAAIC,OAAO,GAAGC,OAAO,CAACF,UAAU,GAAE,CAACJ,SAAS,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV,EAA0CV,OAA1C,CAAF,GAAuDC,SAAS,CAACU,MAAV,CAAiBX,OAAjB,CAAlE,CAArB;;AAEA,WAASO,OAAT,CAAiBK,CAAjB,EAAoB;AAClB,SAAK,IAAIC,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,YAAME,CAAC,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBG,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,OAACD,CAAC,CAACC,CAAD,CAAF,EAAOD,CAAC,CAACG,CAAD,CAAR,IAAe,CAACH,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAACC,CAAD,CAAR,CAAf;AACH;;AACD,WAAOD,CAAP;AACH;;AACC,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,gBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAK,MAAA,uBAAuB,EAAG;AAACc,QAAAA,MAAM,EAAEjB;AAAT;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACCO,OAAO,CAACW,GAAR,CAAYC,MAAM,IAAE;AACjB,4BAAO;AAAQ,UAAA,uBAAuB,EAAG;AAACF,YAAAA,MAAM,EAAEE;AAAT,WAAlC;AACP,UAAA,OAAO,EAAEC,CAAC,IAAIhB,cAAc,CAACgB,CAAD,EAAID,MAAJ,CADrB;AAEP,UAAA,SAAS,EACPd,gBAAgB,IAChBc,MAAM,KAAKlB,OADX,GACqB,cADrB,GACsC;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH,OATA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KA5BMF,Q;AA8BP,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction Question({question, correct, incorrect, category, handleQuestion, questionComplete, fiftyFifty}) {\r\n    let answers = shuffle(fiftyFifty? [incorrect[Math.floor(Math.random() * 2)],correct] : incorrect.concat(correct));\r\n    \r\n    function shuffle(a) {\r\n      for (let i = a.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [a[i], a[j]] = [a[j], a[i]];\r\n      }\r\n      return a;\r\n  }\r\n    return (\r\n      <div className=\"question\">\r\n          <h3>{category}</h3>\r\n        <div dangerouslySetInnerHTML ={{__html: question}}></div>\r\n        <div className=\"answers\">\r\n        {answers.map(answer=>{\r\n            return <button dangerouslySetInnerHTML ={{__html: answer}} \r\n            onClick={e => handleQuestion(e, answer )} \r\n            className={\r\n              questionComplete &&\r\n              answer === correct ? 'green answer' : ''\r\n            }>\r\n                \r\n                </button>\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Question;"]},"metadata":{},"sourceType":"module"}