{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Question from \"./Question\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(_ref) {\n  _s();\n\n  let {\n    playerName\n  } = _ref;\n  const [questions, setQuestions] = useState([]);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [questionComplete, setQuestionComplete] = useState(false);\n  const [correctAnswers, setcorrectAnswers] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [score, setScore] = useState({\n    name: playerName,\n    score: 0\n  });\n  const questionAmount = 1;\n  var defaultPlayerAnswers = [];\n\n  for (let x = 0; x < questionAmount; x++) {\n    defaultPlayerAnswers.push({\n      questionNum: x,\n      answer: false\n    });\n  }\n\n  const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\n  useEffect(() => {\n    let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}`).then(res => res.json()).then(data => setQuestions(data.results));\n  }, [newQuestion]);\n\n  function handleQuestion(event, playerAnswer, key) {\n    setQuestionComplete(true);\n    questions[0].correct_answer === playerAnswer ? // new questions\n    // add score\n    // remove question complete\n    correctAnswer() : incorrectAnswer();\n  }\n\n  function fiftyFifty() {\n    setFiftyFifty(true);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  function incorrectAnswer() {\n    setQuizComplete(true);\n    saveScoreLocal();\n  }\n\n  function saveScoreLocal() {\n    const savedScores = localStorage.getItem(\"score\");\n    const savedObj = JSON.parse(savedScores);\n    var exists = savedObj && Object.keys(savedObj).some(function (k) {\n      return savedObj[k].name === score.name;\n    });\n    exists ? saveCurrentPlayerScore(savedObj) : savedObj ? localStorage.setItem(\"score\", JSON.stringify([...savedObj, score])) : localStorage.setItem(\"score\", JSON.stringify([score]));\n  }\n\n  function saveCurrentPlayerScore(savedObj) {\n    savedObj.map(savedScore => {\n      if (savedScore.name === score.name) {\n        savedScore.score = score.score;\n      }\n    });\n    localStorage.setItem(\"score\", JSON.stringify([...savedObj]));\n  }\n\n  async function correctAnswer() {\n    setScore(prev => ({ ...prev,\n      score: prev.score + 1\n    }));\n    await timeout(100);\n    setNewQuestion(prev => prev + 1);\n    setQuestionComplete(false);\n  }\n\n  function checkScores() {\n    setcorrectAnswers(0);\n    playersAnswers.map(answer => {\n      return answer.answer === questions[answer.questionNum].correct_answer ? setcorrectAnswers(prev => prev + 1) : correctAnswers;\n    });\n    setQuizComplete(true);\n  }\n\n  function handleSubmission() {\n    quizComplete ? newGame() : checkScores();\n  }\n\n  function newGame() {\n    setQuizComplete(false);\n    setQuestionComplete(false);\n    setNewQuestion(prev => prev + 1);\n    setScore(prev => ({ ...prev,\n      score: 0\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [questions.map((question, key) => {\n        return /*#__PURE__*/_jsxDEV(Question, {\n          id: key,\n          playerAnswer: playersAnswers[`${key}`],\n          handleQuestion: handleQuestion,\n          question: question.question,\n          correct: question.correct_answer,\n          incorrect: question.incorrect_answers,\n          category: question.category,\n          questionComplete: questionComplete\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 28\n        }, this);\n      }), quizComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmission,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Back to main menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Name \", score.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score \", score.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fiftyFifty,\n        children: \"50/50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"LdilwgeeoEdiqXQ2r/iVIi3yBR8=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Question","nanoid","Quiz","playerName","questions","setQuestions","quizComplete","setQuizComplete","questionComplete","setQuestionComplete","correctAnswers","setcorrectAnswers","newQuestion","setNewQuestion","score","setScore","name","questionAmount","defaultPlayerAnswers","x","push","questionNum","answer","playersAnswers","setPlayersAnswers","q","fetch","then","res","json","data","results","handleQuestion","event","playerAnswer","key","correct_answer","correctAnswer","incorrectAnswer","fiftyFifty","setFiftyFifty","timeout","delay","Promise","setTimeout","saveScoreLocal","savedScores","localStorage","getItem","savedObj","JSON","parse","exists","Object","keys","some","k","saveCurrentPlayerScore","setItem","stringify","map","savedScore","prev","checkScores","handleSubmission","newGame","question","incorrect_answers","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Question from \"./Question\";\r\nimport {nanoid} from \"nanoid\"\r\n\r\n\r\nfunction Quiz({playerName}) {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [questionComplete, setQuestionComplete] = useState(false)\r\n    const [correctAnswers, setcorrectAnswers] = useState(0)\r\n    const [newQuestion, setNewQuestion] = useState(0)\r\n    const [score, setScore] = useState({\r\n        name: playerName,\r\n        score: 0\r\n\r\n    })\r\n    \r\n    const questionAmount = 1;\r\n    var defaultPlayerAnswers = [];\r\n\r\n    for (let x = 0; x < questionAmount; x++) {\r\n        defaultPlayerAnswers.push({questionNum: x, answer:false});\r\n    }\r\n\r\n    const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\r\n\r\n    useEffect(() => {\r\n        let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}`)\r\n            .then(res => res.json())\r\n            .then(data => setQuestions(data.results))\r\n        },[newQuestion])\r\n\r\n    function handleQuestion(event, playerAnswer, key){\r\n        setQuestionComplete(true);\r\n        questions[0].correct_answer === playerAnswer ?\r\n        // new questions\r\n        // add score\r\n        // remove question complete\r\n        correctAnswer():\r\n        incorrectAnswer()\r\n        \r\n    }\r\n\r\n    function fiftyFifty(){\r\n            setFiftyFifty(true);\r\n    }\r\n\r\n    function timeout(delay) {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    function incorrectAnswer(){\r\n        setQuizComplete(true)\r\n        saveScoreLocal()\r\n    }\r\n\r\n    function saveScoreLocal(){\r\n        const savedScores = localStorage.getItem(\"score\");\r\n        const savedObj = JSON.parse(savedScores)\r\n\r\n       var exists = savedObj && \r\n        Object.keys(savedObj).some(function(k) {\r\n            return savedObj[k].name === score.name;\r\n        });\r\n       \r\n        exists ?\r\n        saveCurrentPlayerScore(savedObj)\r\n        :\r\n            savedObj ?\r\n                localStorage.setItem(\"score\", JSON.stringify([\r\n                    ...savedObj,\r\n                    score\r\n                ])) \r\n            :\r\n                localStorage.setItem(\"score\", JSON.stringify([\r\n                    score\r\n                ]))\r\n\r\n    }\r\n\r\n    function saveCurrentPlayerScore(savedObj){\r\n        savedObj.map(savedScore=>{\r\n            if(savedScore.name === score.name){\r\n                savedScore.score = score.score\r\n            }\r\n        }) \r\n        localStorage.setItem(\"score\", JSON.stringify([\r\n            ...savedObj\r\n        ]))\r\n    }\r\n\r\n\r\n   async function correctAnswer(){\r\n        setScore(prev=>({\r\n            ...prev,\r\n            score:prev.score+1\r\n        }));\r\n        await timeout(100);\r\n        setNewQuestion(prev=>prev+1)\r\n        setQuestionComplete(false)\r\n       \r\n    }\r\n    function checkScores(){\r\n        setcorrectAnswers(0)\r\n        playersAnswers.map(answer =>{\r\n            return answer.answer === questions[answer.questionNum].correct_answer ? setcorrectAnswers(prev=>prev+1) : correctAnswers;\r\n        })\r\n        setQuizComplete(true) \r\n    }\r\n\r\n    function handleSubmission(){\r\n        quizComplete ?\r\n        newGame(): \r\n        checkScores() ;\r\n    }\r\n\r\n    function newGame(){\r\n        setQuizComplete(false);\r\n        setQuestionComplete(false)\r\n        setNewQuestion(prev=>prev+1)\r\n        setScore(prev=>({\r\n            ...prev,\r\n            score:0\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {questions.map((question,key) => {\r\n                    return <Question key={key} id={key} playerAnswer={playersAnswers[`${key}`]} \r\n                    handleQuestion={handleQuestion} question={question.question} correct={question.correct_answer} \r\n                    incorrect={question.incorrect_answers} category={question.category}\r\n                    questionComplete={questionComplete}/>\r\n                })}\r\n\r\n                {quizComplete && <button onClick={handleSubmission}>Play Again</button> }\r\n                <a href=\"/\"><button>Back to main menu</button></a>\r\n\r\n                <h4>Name {score.name}</h4>\r\n                <h4>Score {score.score}</h4>\r\n\r\n                <button onClick={fiftyFifty}>50/50</button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}