{"ast":null,"code":"// Copyright 2012 Iris Couch, all rights reserved.\n//\n// Looking up and converting between various constants\nvar util = require('util');\n\nmodule.exports = {\n  'type': swap_type,\n  'class': swap_class,\n  'type_to_label': type_to_label,\n  'type_to_number': type_to_number,\n  'class_to_label': class_to_label,\n  'class_to_number': class_to_number // For testing\n  ,\n  'transpose': transpose,\n  'mk_type_labels': mk_type_labels\n};\nvar TYPE_LABELS = mk_type_labels(),\n    CLASS_LABELS = mk_class_labels(),\n    TYPE_NUMBERS = transpose(TYPE_LABELS),\n    CLASS_NUMBERS = transpose(CLASS_LABELS);\n\nfunction swap_type(obj) {\n  return typeof obj == 'string' ? type_to_number(obj) : type_to_label(obj);\n}\n\nfunction swap_class(obj) {\n  return typeof obj == 'string' ? class_to_number(obj) : class_to_label(obj);\n}\n\nfunction type_to_label(type) {\n  if (isNaN(type) || typeof type != 'number' || type < 1 || type > 65535) throw new Error('Invalid record type: ' + type);\n  return TYPE_LABELS[type];\n}\n\nfunction type_to_number(type) {\n  if (typeof type != 'string') throw new Error('Type must be string: ' + type);\n  var num = TYPE_NUMBERS[type];\n  if (!num) throw new Error('No such type label: ' + type);else return num;\n}\n\nfunction class_to_label(clas) {\n  if (isNaN(clas) || typeof clas != 'number' || clas < 1 || clas > 65535) throw new Error('Invalid record class: ' + clas);\n  return CLASS_LABELS[clas];\n}\n\nfunction class_to_number(clas) {\n  if (typeof clas != 'string') throw new Error('Type must be string: ' + clas);\n  var num = CLASS_NUMBERS[clas];\n  if (!num) throw new Error('No such clas label: ' + clas);else return num;\n} //\n// Utilities\n//\n\n\nfunction transpose(obj) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    var val = obj[key];\n    if (typeof val == 'string') result[val] = +key;\n  });\n  return result;\n}\n\nfunction mk_class_labels() {\n  var classes = {\n    0: 'reserved',\n    1: 'IN',\n    2: null,\n    3: 'CH',\n    4: 'HS' // 5 - 127 unassigned classes\n    // 128 - 253 unassigned qclasses\n    ,\n    254: 'NONE',\n    255: '*' // 256 - 32767 unassigned\n    // 32768 - 57343 unassigned\n    // 57344 - 65279 unassigned qclasses and metaclasses\n    // 65280 - 65534 Private use\n    ,\n    65535: 'reserved'\n  };\n  var unassigned = [[5, 253], [256, 65279]];\n  unassigned.forEach(function (pair) {\n    var start = pair[0],\n        stop = pair[1];\n\n    for (var i = start; i <= stop; i++) classes[i] = null;\n  });\n\n  for (var i = 65280; i <= 65534; i++) classes[i] = 'Private use';\n\n  return classes;\n}\n\nfunction mk_type_labels() {\n  var types = {\n    0: null,\n    1: 'A',\n    2: 'NS',\n    3: 'MD',\n    4: 'MF',\n    5: 'CNAME',\n    6: 'SOA',\n    7: 'MB',\n    8: 'MG',\n    9: 'MR',\n    10: 'NULL',\n    11: 'WKS',\n    12: 'PTR',\n    13: 'HINFO',\n    14: 'MINFO',\n    15: 'MX',\n    16: 'TXT',\n    17: 'RP',\n    18: 'AFSDB',\n    19: 'X25',\n    20: 'ISDN',\n    21: 'RT',\n    22: 'NSAP',\n    23: 'NSAP-PTR',\n    24: 'SIG',\n    25: 'KEY',\n    26: 'PX',\n    27: 'GPOS',\n    28: 'AAAA',\n    29: 'LOC',\n    30: 'NXT',\n    31: 'EID',\n    32: 'NIMLOC',\n    33: 'SRV',\n    34: 'ATMA',\n    35: 'NAPTR',\n    36: 'KX',\n    37: 'CERT',\n    38: 'A6',\n    39: 'DNAME',\n    40: 'SINK',\n    41: 'OPT',\n    42: 'APL',\n    43: 'DS',\n    44: 'SSHFP',\n    45: 'IPSECKEY',\n    46: 'RRSIG',\n    47: 'NSEC',\n    48: 'DNSKEY',\n    49: 'DHCID',\n    50: 'NSEC3',\n    51: 'NSEC3PARAM',\n    52: 'TLSA' // 53 - 54 unassigned\n    ,\n    55: 'HIP',\n    56: 'NINFO',\n    57: 'RKEY',\n    58: 'TALINK',\n    59: 'CDS' // 60 - 98 unassigned\n    ,\n    99: 'SPF',\n    100: 'UINFO',\n    101: 'UID',\n    102: 'GID',\n    103: 'UNSPEC',\n    104: 'NID',\n    105: 'L32',\n    106: 'L64',\n    107: 'LP' // 108 - 248 unassigned\n    ,\n    249: 'TKEY',\n    250: 'TSIG',\n    251: 'IXFR',\n    252: 'AXFR',\n    253: 'MAILB',\n    254: 'MAILA',\n    255: '*',\n    256: 'URI',\n    257: 'CAA' // 258 - 32767 unassigned\n    ,\n    32768: 'TA',\n    32769: 'DLV' // 32770 - 65279 unassigned\n    // 65280 - 65534 Private use\n    ,\n    65535: 'Reserved'\n  };\n  var unassigned = [[53, 54], [60, 98], [108, 248], [258, 32767], [32770, 65279]];\n  unassigned.forEach(function (pair) {\n    var start = pair[0],\n        stop = pair[1];\n\n    for (var i = start; i <= stop; i++) types[i] = null;\n  });\n\n  for (var i = 65280; i <= 65534; i++) types[i] = 'Private use';\n\n  return types;\n}","map":{"version":3,"sources":["C:/react/quiz/node_modules/hbo-dnsd/constants.js"],"names":["util","require","module","exports","swap_type","swap_class","type_to_label","type_to_number","class_to_label","class_to_number","transpose","mk_type_labels","TYPE_LABELS","CLASS_LABELS","mk_class_labels","TYPE_NUMBERS","CLASS_NUMBERS","obj","type","isNaN","Error","num","clas","result","Object","keys","forEach","key","val","classes","unassigned","pair","start","stop","i","types"],"mappings":"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","sourcesContent":["// Copyright 2012 Iris Couch, all rights reserved.\n//\n// Looking up and converting between various constants\n\nvar util = require('util')\n\nmodule.exports = { 'type'           : swap_type\n                 , 'class'          : swap_class\n                 , 'type_to_label'  : type_to_label\n                 , 'type_to_number' : type_to_number\n                 , 'class_to_label' : class_to_label\n                 , 'class_to_number': class_to_number\n\n                 // For testing\n                 , 'transpose'     : transpose\n                 , 'mk_type_labels': mk_type_labels\n                 }\n\nvar TYPE_LABELS   = mk_type_labels()\n  , CLASS_LABELS  = mk_class_labels()\n  , TYPE_NUMBERS  = transpose(TYPE_LABELS)\n  , CLASS_NUMBERS = transpose(CLASS_LABELS)\n\nfunction swap_type(obj) {\n  return (typeof obj == 'string') ? type_to_number(obj) : type_to_label(obj)\n}\n\nfunction swap_class(obj) {\n  return (typeof obj == 'string') ? class_to_number(obj) : class_to_label(obj)\n}\n\nfunction type_to_label(type) {\n  if(isNaN(type) || typeof type != 'number' || type < 1 || type > 65535)\n    throw new Error('Invalid record type: ' + type)\n  return TYPE_LABELS[type]\n}\n\nfunction type_to_number(type) {\n  if(typeof type != 'string')\n    throw new Error('Type must be string: ' + type)\n\n  var num = TYPE_NUMBERS[type]\n  if(!num)\n    throw new Error('No such type label: ' + type)\n  else\n    return num\n}\n\nfunction class_to_label(clas) {\n  if(isNaN(clas) || typeof clas != 'number' || clas < 1 || clas > 65535)\n    throw new Error('Invalid record class: ' + clas)\n  return CLASS_LABELS[clas]\n}\n\nfunction class_to_number(clas) {\n  if(typeof clas != 'string')\n    throw new Error('Type must be string: ' + clas)\n\n  var num = CLASS_NUMBERS[clas]\n  if(!num)\n    throw new Error('No such clas label: ' + clas)\n  else\n    return num\n}\n\n//\n// Utilities\n//\n\nfunction transpose(obj) {\n  var result = {}\n  Object.keys(obj).forEach(function(key) {\n    var val = obj[key]\n    if(typeof val == 'string')\n      result[val] = +key\n  })\n\n  return result\n}\n\nfunction mk_class_labels() {\n  var classes =\n    { 0: 'reserved'\n    , 1: 'IN'\n    , 2: null\n    , 3: 'CH'\n    , 4: 'HS'\n    // 5 - 127 unassigned classes\n    // 128 - 253 unassigned qclasses\n    , 254: 'NONE'\n    , 255: '*'\n    // 256 - 32767 unassigned\n    // 32768 - 57343 unassigned\n    // 57344 - 65279 unassigned qclasses and metaclasses\n    // 65280 - 65534 Private use\n    , 65535: 'reserved'\n    }\n\n  var unassigned = [ [5,253], [256,65279] ]\n  unassigned.forEach(function(pair) {\n    var start = pair[0], stop = pair[1]\n    for(var i = start; i <= stop; i++)\n      classes[i] = null\n  })\n\n  for(var i = 65280; i <= 65534; i++)\n    classes[i] = 'Private use'\n\n  return classes\n}\n\nfunction mk_type_labels() {\n  var types =\n    { 0: null\n    , 1: 'A'\n    , 2: 'NS'\n    , 3: 'MD'\n    , 4: 'MF'\n    , 5: 'CNAME'\n    , 6: 'SOA'\n    , 7: 'MB'\n    , 8: 'MG'\n    , 9: 'MR'\n    , 10: 'NULL'\n    , 11: 'WKS'\n    , 12: 'PTR'\n    , 13: 'HINFO'\n    , 14: 'MINFO'\n    , 15: 'MX'\n    , 16: 'TXT'\n    , 17: 'RP'\n    , 18: 'AFSDB'\n    , 19: 'X25'\n    , 20: 'ISDN'\n    , 21: 'RT'\n    , 22: 'NSAP'\n    , 23: 'NSAP-PTR'\n    , 24: 'SIG'\n    , 25: 'KEY'\n    , 26: 'PX'\n    , 27: 'GPOS'\n    , 28: 'AAAA'\n    , 29: 'LOC'\n    , 30: 'NXT'\n    , 31: 'EID'\n    , 32: 'NIMLOC'\n    , 33: 'SRV'\n    , 34: 'ATMA'\n    , 35: 'NAPTR'\n    , 36: 'KX'\n    , 37: 'CERT'\n    , 38: 'A6'\n    , 39: 'DNAME'\n    , 40: 'SINK'\n    , 41: 'OPT'\n    , 42: 'APL'\n    , 43: 'DS'\n    , 44: 'SSHFP'\n    , 45: 'IPSECKEY'\n    , 46: 'RRSIG'\n    , 47: 'NSEC'\n    , 48: 'DNSKEY'\n    , 49: 'DHCID'\n    , 50: 'NSEC3'\n    , 51: 'NSEC3PARAM'\n    , 52: 'TLSA'\n    // 53 - 54 unassigned\n    , 55: 'HIP'\n    , 56: 'NINFO'\n    , 57: 'RKEY'\n    , 58: 'TALINK'\n    , 59: 'CDS'\n    // 60 - 98 unassigned\n    , 99: 'SPF'\n    , 100: 'UINFO'\n    , 101: 'UID'\n    , 102: 'GID'\n    , 103: 'UNSPEC'\n    , 104: 'NID'\n    , 105: 'L32'\n    , 106: 'L64'\n    , 107: 'LP'\n    // 108 - 248 unassigned\n    , 249: 'TKEY'\n    , 250: 'TSIG'\n    , 251: 'IXFR'\n    , 252: 'AXFR'\n    , 253: 'MAILB'\n    , 254: 'MAILA'\n    , 255: '*'\n    , 256: 'URI'\n    , 257: 'CAA'\n    // 258 - 32767 unassigned\n    , 32768: 'TA'\n    , 32769: 'DLV'\n    // 32770 - 65279 unassigned\n    // 65280 - 65534 Private use\n    , 65535: 'Reserved'\n    }\n\n  var unassigned = [ [53,54], [60,98], [108,248], [258,32767], [32770,65279] ]\n  unassigned.forEach(function(pair) {\n    var start = pair[0], stop = pair[1]\n    for(var i = start; i <= stop; i++)\n      types[i] = null\n  })\n\n  for(var i = 65280; i <= 65534; i++)\n    types[i] = 'Private use'\n\n  return types\n}\n"]},"metadata":{},"sourceType":"script"}