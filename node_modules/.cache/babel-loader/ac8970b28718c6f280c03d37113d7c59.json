{"ast":null,"code":"// Load modules\nvar Url = require('url');\n\nvar Hoek = require('hoek');\n\nvar Cryptiles = require('cryptiles');\n\nvar Crypto = require('./crypto');\n\nvar Utils = require('./utils'); // Declare internals\n\n\nvar internals = {}; // Generate an Authorization header for a given request\n\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    method: HTTP verb (e.g. 'GET', 'POST')\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n        app: '24s23423f34dx',                               // Oz application id\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n    }\n*/\n\nexports.header = function (uri, method, options) {\n  var result = {\n    field: '',\n    artifacts: {}\n  }; // Validate inputs\n\n  if (!uri || typeof uri !== 'string' && typeof uri !== 'object' || !method || typeof method !== 'string' || !options || typeof options !== 'object') {\n    return result;\n  } // Application time\n\n\n  var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000); // Validate credentials\n\n  var credentials = options.credentials;\n\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    // Invalid credential object\n    return result;\n  }\n\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return result;\n  } // Parse URI\n\n\n  if (typeof uri === 'string') {\n    uri = Url.parse(uri);\n  } // Calculate signature\n\n\n  var artifacts = {\n    credentials: credentials,\n    ts: timestamp,\n    nonce: options.nonce || Cryptiles.randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    // Maintain trailing '?'\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: options.hash,\n    ext: options.ext,\n    app: options.app,\n    dlg: options.dlg\n  };\n  result.artifacts = artifacts; // Calculate payload hash\n\n  if (!artifacts.hash && options.hasOwnProperty('payload')) {\n    artifacts.hash = Crypto.calculateHash(options.payload, credentials.algorithm, options.contentType);\n  }\n\n  var mac = Crypto.calculateMac('header', artifacts); // Construct header\n\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''; // Other falsey values allowed\n\n  var header = 'Hawk id=\"' + credentials.id + '\", ts=\"' + artifacts.ts + '\", nonce=\"' + artifacts.nonce + (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') + (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') + '\", mac=\"' + mac + '\"';\n\n  if (artifacts.app) {\n    header += ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n  }\n\n  result.field = header;\n  return result;\n}; // Validate server response\n\n/*\n    res:        node's response object\n    artifacts:  object recieved from header().artifacts\n    options: {\n        payload:    optional payload received\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n    }\n*/\n\n\nexports.authenticate = function (res, artifacts, options) {\n  artifacts = Hoek.clone(artifacts);\n  options = options || {};\n\n  if (res.headers['www-authenticate']) {\n    // Parse HTTP WWW-Authenticate header\n    var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\n\n    if (attributes instanceof Error) {\n      return false;\n    }\n\n    if (attributes.ts) {\n      var tsm = Crypto.calculateTsMac(attributes.ts, artifacts.credentials);\n\n      if (!Cryptiles.fixedTimeComparison(tsm, attributes.tsm)) {\n        return false;\n      }\n    }\n  } // Parse HTTP Server-Authorization header\n\n\n  if (!res.headers['server-authorization'] && !options.required) {\n    return true;\n  }\n\n  var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\n\n  if (attributes instanceof Error) {\n    return false;\n  }\n\n  artifacts.ext = attributes.ext;\n  artifacts.hash = attributes.hash;\n  var mac = Crypto.calculateMac('response', artifacts);\n\n  if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {\n    return false;\n  }\n\n  if (!options.hasOwnProperty('payload')) {\n    return true;\n  }\n\n  if (!attributes.hash) {\n    return false;\n  }\n\n  var calculatedHash = Crypto.calculateHash(options.payload, artifacts.credentials.algorithm, res.headers['content-type']);\n  return Cryptiles.fixedTimeComparison(calculatedHash, attributes.hash);\n};","map":{"version":3,"sources":["C:/react/quiz/node_modules/hawk/lib/client.js"],"names":["Url","require","Hoek","Cryptiles","Crypto","Utils","internals","exports","header","uri","method","options","result","field","artifacts","timestamp","Math","floor","now","localtimeOffsetMsec","credentials","id","key","algorithm","algorithms","indexOf","parse","ts","nonce","randomString","resource","pathname","search","host","hostname","port","protocol","hash","ext","app","dlg","hasOwnProperty","calculateHash","payload","contentType","mac","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","res","clone","headers","attributes","parseAuthorizationHeader","Error","tsm","calculateTsMac","fixedTimeComparison","required","calculatedHash"],"mappings":"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","sourcesContent":["// Load modules\n\nvar Url = require('url');\nvar Hoek = require('hoek');\nvar Cryptiles = require('cryptiles');\nvar Crypto = require('./crypto');\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Generate an Authorization header for a given request\n\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    method: HTTP verb (e.g. 'GET', 'POST')\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n        app: '24s23423f34dx',                               // Oz application id\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n    }\n*/\n\nexports.header = function (uri, method, options) {\n\n    var result = {\n        field: '',\n        artifacts: {}\n    };\n\n    // Validate inputs\n\n    if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return result;\n    }\n\n    // Application time\n\n    var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000)\n\n    // Validate credentials\n\n    var credentials = options.credentials;\n    if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return result;\n    }\n\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return result;\n    }\n\n    // Parse URI\n\n    if (typeof uri === 'string') {\n        uri = Url.parse(uri);\n    }\n\n    // Calculate signature\n\n    var artifacts = {\n        credentials: credentials,\n        ts: timestamp,\n        nonce: options.nonce || Cryptiles.randomString(6),\n        method: method,\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\n        host: uri.hostname,\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n    };\n\n    result.artifacts = artifacts;\n\n    // Calculate payload hash\n\n    if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = Crypto.calculateHash(options.payload, credentials.algorithm, options.contentType);\n    }\n\n    var mac = Crypto.calculateMac('header', artifacts);\n\n    // Construct header\n\n    var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n    var header = 'Hawk id=\"' + credentials.id +\n                 '\", ts=\"' + artifacts.ts +\n                 '\", nonce=\"' + artifacts.nonce +\n                 (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n                 (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') +\n                 '\", mac=\"' + mac + '\"';\n\n    if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n                  (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n    }\n\n    result.field = header;\n\n    return result;\n};\n\n\n// Validate server response\n\n/*\n    res:        node's response object\n    artifacts:  object recieved from header().artifacts\n    options: {\n        payload:    optional payload received\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n    }\n*/\n\nexports.authenticate = function (res, artifacts, options) {\n\n    artifacts = Hoek.clone(artifacts);\n    options = options || {};\n\n    if (res.headers['www-authenticate']) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\n        if (attributes instanceof Error) {\n            return false;\n        }\n\n        if (attributes.ts) {\n            var tsm = Crypto.calculateTsMac(attributes.ts, artifacts.credentials);\n            if (!Cryptiles.fixedTimeComparison(tsm, attributes.tsm)) {\n                return false;\n            }\n        }\n    }\n\n    // Parse HTTP Server-Authorization header\n\n    if (!res.headers['server-authorization'] &&\n        !options.required) {\n\n        return true;\n    }\n\n    var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\n    if (attributes instanceof Error) {\n        return false;\n    }\n\n    artifacts.ext = attributes.ext;\n    artifacts.hash = attributes.hash;\n\n    var mac = Crypto.calculateMac('response', artifacts);\n    if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {\n        return false;\n    }\n\n    if (!options.hasOwnProperty('payload')) {\n        return true;\n    }\n\n    if (!attributes.hash) {\r\n        return false;\r\n    }\n\n    var calculatedHash = Crypto.calculateHash(options.payload, artifacts.credentials.algorithm, res.headers['content-type']);\n    return Cryptiles.fixedTimeComparison(calculatedHash, attributes.hash);\n};\n\n"]},"metadata":{},"sourceType":"script"}