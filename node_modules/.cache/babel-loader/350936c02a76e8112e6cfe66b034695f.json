{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Question from \"./Question\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [questionComplete, setQuestionComplete] = useState(false);\n  const [correctAnswers, setcorrectAnswers] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const questionAmount = 1;\n  var defaultPlayerAnswers = [];\n\n  for (let x = 0; x < questionAmount; x++) {\n    defaultPlayerAnswers.push({\n      questionNum: x,\n      answer: false\n    });\n  }\n\n  const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\n  useEffect(() => {\n    let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}`).then(res => res.json()).then(data => setQuestions(data.results));\n  }, [newQuestion]);\n\n  function handleQuestion(event, playerAnswer, key) {\n    setQuestionComplete(true);\n    questions[0].correct_answer === playerAnswer ? // new questions\n    // add score\n    // remove question complete\n    correctAnswer() : incorrectAnswer();\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  function incorrectAnswer() {\n    setQuizComplete(true);\n    const savedScores = localStorage.getItem(\"score\");\n    const savedObj = JSON.parse(savedScores);\n    localStorage.setItem(\"score\", JSON.stringify({ ...savedObj,\n      name: `player ${Math.floor(Math.random() * 10)}`,\n      score: score\n    }));\n    const savedScores1 = localStorage.getItem(\"score\");\n    const savedObj1 = JSON.parse(savedScores);\n    console.log(savedObj1);\n  }\n\n  async function correctAnswer() {\n    setScore(prev => prev + 1);\n    await timeout(5000);\n    setNewQuestion(prev => prev + 1);\n    setQuestionComplete(false);\n  }\n\n  function checkScores() {\n    setcorrectAnswers(0);\n    playersAnswers.map(answer => {\n      return answer.answer === questions[answer.questionNum].correct_answer ? setcorrectAnswers(prev => prev + 1) : correctAnswers;\n    });\n    setQuizComplete(true);\n  }\n\n  function handleSubmission() {\n    quizComplete ? newGame() : checkScores();\n  }\n\n  function newGame() {\n    setQuizComplete(false);\n    setQuestionComplete(false);\n    setNewQuestion(prev => prev + 1);\n    setScore(0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [questions.map((question, key) => {\n        return /*#__PURE__*/_jsxDEV(Question, {\n          id: key,\n          playerAnswer: playersAnswers[`${key}`],\n          handleQuestion: handleQuestion,\n          question: question.question,\n          correct: question.correct_answer,\n          incorrect: question.incorrect_answers,\n          category: question.category,\n          questionComplete: questionComplete\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this);\n      }), quizComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmission,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Back to main menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"YPl2/Z6qKfaZdA2EyGQa0pxlfQM=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Question","nanoid","Quiz","questions","setQuestions","quizComplete","setQuizComplete","questionComplete","setQuestionComplete","correctAnswers","setcorrectAnswers","newQuestion","setNewQuestion","score","setScore","questionAmount","defaultPlayerAnswers","x","push","questionNum","answer","playersAnswers","setPlayersAnswers","q","fetch","then","res","json","data","results","handleQuestion","event","playerAnswer","key","correct_answer","correctAnswer","incorrectAnswer","timeout","delay","Promise","setTimeout","savedScores","localStorage","getItem","savedObj","JSON","parse","setItem","stringify","name","Math","floor","random","savedScores1","savedObj1","console","log","prev","checkScores","map","handleSubmission","newGame","question","incorrect_answers","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Question from \"./Question\";\r\nimport {nanoid} from \"nanoid\"\r\n\r\n\r\nfunction Quiz() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizComplete, setQuizComplete] = useState(false)\r\n    const [questionComplete, setQuestionComplete] = useState(false)\r\n    const [correctAnswers, setcorrectAnswers] = useState(0)\r\n    const [newQuestion, setNewQuestion] = useState(0)\r\n    const [score, setScore] = useState(0)\r\n    \r\n    const questionAmount = 1;\r\n    var defaultPlayerAnswers = [];\r\n\r\n    for (let x = 0; x < questionAmount; x++) {\r\n        defaultPlayerAnswers.push({questionNum: x, answer:false});\r\n    }\r\n\r\n    const [playersAnswers, setPlayersAnswers] = useState(defaultPlayerAnswers);\r\n\r\n    useEffect(() => {\r\n        let q = fetch(`https://opentdb.com/api.php?amount=${questionAmount}`)\r\n            .then(res => res.json())\r\n            .then(data => setQuestions(data.results))\r\n        },[newQuestion])\r\n\r\n    function handleQuestion(event, playerAnswer, key){\r\n        setQuestionComplete(true);\r\n        questions[0].correct_answer === playerAnswer ?\r\n        // new questions\r\n        // add score\r\n        // remove question complete\r\n        correctAnswer():\r\n        incorrectAnswer()\r\n        \r\n    }\r\n\r\n    function timeout(delay) {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    function incorrectAnswer(){\r\n        setQuizComplete(true)\r\n        \r\n        const savedScores = localStorage.getItem(\"score\");\r\n        const savedObj = JSON.parse(savedScores)\r\n        localStorage.setItem(\"score\", JSON.stringify({...savedObj,\r\n            name:`player ${Math.floor(Math.random() * 10)}`,\r\n            score:score\r\n        }));\r\n\r\n        const savedScores1 = localStorage.getItem(\"score\");\r\n        const savedObj1 = JSON.parse(savedScores)\r\n        console.log(savedObj1)\r\n     \r\n\r\n\r\n    }\r\n\r\n\r\n   async function correctAnswer(){\r\n        setScore(prev=>prev+1);\r\n        await timeout(5000);\r\n        setNewQuestion(prev=>prev+1)\r\n        setQuestionComplete(false)\r\n       \r\n    }\r\n    function checkScores(){\r\n        setcorrectAnswers(0)\r\n        playersAnswers.map(answer =>{\r\n            return answer.answer === questions[answer.questionNum].correct_answer ? setcorrectAnswers(prev=>prev+1) : correctAnswers;\r\n        })\r\n        setQuizComplete(true) \r\n    }\r\n\r\n    function handleSubmission(){\r\n        quizComplete ?\r\n        newGame(): \r\n        checkScores() ;\r\n    }\r\n\r\n    function newGame(){\r\n        setQuizComplete(false);\r\n        setQuestionComplete(false)\r\n        setNewQuestion(prev=>prev+1)\r\n        setScore(0)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {questions.map((question,key) => {\r\n                    return <Question key={key} id={key} playerAnswer={playersAnswers[`${key}`]} \r\n                    handleQuestion={handleQuestion} question={question.question} correct={question.correct_answer} \r\n                    incorrect={question.incorrect_answers} category={question.category}\r\n                    questionComplete={questionComplete}/>\r\n                })}\r\n\r\n                {quizComplete && <button onClick={handleSubmission}>Play Again</button> }\r\n                <a href=\"/\"><button>Back to main menu</button></a>\r\n\r\n                <h4>Score {score}</h4>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}