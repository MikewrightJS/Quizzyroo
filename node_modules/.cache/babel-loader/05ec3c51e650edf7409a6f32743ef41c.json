{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n'use strict';\n\nvar fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    os = require('os'),\n    util = require('util'),\n    Cache = require('native-dns-cache'),\n    consts = require('native-dns-packet').consts,\n    path = require('path'),\n    utils = require('./utils');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar Platform = function () {\n  this._nsReady = false;\n  this._hostsReady = false;\n  Object.defineProperty(this, 'ready', {\n    get: function () {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n  this._watches = {};\n  Object.defineProperty(this, 'watching', {\n    get: function () {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function (value) {\n      var k;\n      if (value) this._watchFiles();else {\n        for (k in this._watches) {\n          this._watches[k].close();\n\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n  this.hosts = new Cache();\n\n  this._initNameServers();\n\n  this._initHostsFile();\n\n  this._populate();\n\n  this.cache = false; //new Cache();\n};\n\nutil.inherits(Platform, EventEmitter);\n\nPlatform.prototype.reload = function () {\n  this.emit('unready');\n\n  this._initNameServers();\n\n  this._initHostsFile();\n\n  this._populate();\n};\n\nPlatform.prototype._initNameServers = function () {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\n\nPlatform.prototype._initHostsFile = function () {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\n\nPlatform.prototype._populate = function () {\n  var hostsfile,\n      self = this;\n\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [{\n        address: '8.8.8.8',\n        port: 53\n      }, {\n        address: '8.8.4.4',\n        port: 53\n      }];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot, '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n\n  this._parseHosts(hostsfile);\n};\n\nPlatform.prototype._watchFiles = function () {\n  var self = this,\n      watchParams;\n  watchParams = {\n    persistent: false\n  };\n\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n\n          self._initNameServers();\n\n          self.parseResolv();\n        }\n      });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n\n          self._initHostsFile();\n\n          self._parseHosts(hostsfile);\n        }\n      });\n      break;\n  }\n};\n\nPlatform.prototype._checkReady = function () {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\n\nPlatform.prototype.parseResolv = function () {\n  var self = this;\n  fs.readFile('/etc/resolv.conf', 'ascii', function (err, file) {\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n\n            break;\n        }\n      }\n    });\n    self._nsReady = true;\n\n    self._checkReady();\n  });\n};\n\nPlatform.prototype._parseHosts = function (hostsfile) {\n  var self = this;\n  fs.readFile(hostsfile, 'ascii', function (err, file) {\n    var toStore = {};\n\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function (domain) {\n            var r = toStore[revip];\n            if (!r) r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t) t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n          /* Domain -> IP */\n\n          parts.forEach(function (domain) {\n            var r = toStore[domain.toLowerCase()];\n\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t) t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n\n    self._checkReady();\n  });\n};\n\nmodule.exports = new Platform();","map":{"version":3,"sources":["C:/react/quiz/node_modules/native-dns/lib/platform.js"],"names":["fs","require","EventEmitter","net","os","util","Cache","consts","path","utils","A","NAME_TO_QTYPE","AAAA","PTR","Platform","_nsReady","_hostsReady","Object","defineProperty","get","_watches","keys","length","set","value","k","_watchFiles","close","hosts","_initNameServers","_initHostsFile","_populate","cache","inherits","prototype","reload","emit","name_servers","search_path","timeout","attempts","edns","purge","hostsfile","self","platform","address","port","join","process","env","SystemRoot","parseResolv","_parseHosts","watchParams","persistent","resolve","watch","event","filename","_checkReady","ready","readFile","err","file","split","forEach","line","i","parts","subparts","replace","match","push","slice","parseInt","toStore","ip","revip","kind","isIP","reverseIP","domain","r","t","type","class","name","data","ttl","Infinity","toLowerCase","key","_store","_zone","module","exports"],"mappings":"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","sourcesContent":["// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    os = require('os'),\n    util = require('util'),\n    Cache = require('native-dns-cache'),\n    consts = require('native-dns-packet').consts,\n    path = require('path'),\n    utils = require('./utils');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar Platform = function() {\n  this._nsReady = false;\n  this._hostsReady = false;\n\n  Object.defineProperty(this, 'ready', {\n    get: function() {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n\n  this._watches = {};\n\n  Object.defineProperty(this, 'watching', {\n    get: function() {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function(value) {\n      var k;\n      if (value)\n        this._watchFiles();\n      else {\n        for (k in this._watches) {\n          this._watches[k].close();\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n\n  this.hosts = new Cache();\n\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n\n  this.cache = false; //new Cache();\n};\nutil.inherits(Platform, EventEmitter);\n\nPlatform.prototype.reload = function() {\n  this.emit('unready');\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n};\n\nPlatform.prototype._initNameServers = function() {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\n\nPlatform.prototype._initHostsFile = function() {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\n\nPlatform.prototype._populate = function() {\n  var hostsfile, self = this;\n\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [\n        {\n          address: '8.8.8.8',\n          port: 53\n        },\n        {\n          address: '8.8.4.4',\n          port: 53\n        }\n      ];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot,\n                        '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n\n  this._parseHosts(hostsfile);\n};\n\nPlatform.prototype._watchFiles = function() {\n  var self = this, watchParams;\n\n  watchParams = {persistent: false};\n\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initNameServers();\n              self.parseResolv();\n            }\n          });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initHostsFile();\n              self._parseHosts(hostsfile);\n            }\n          });\n      break;\n  }\n};\n\nPlatform.prototype._checkReady = function() {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\n\nPlatform.prototype.parseResolv = function() {\n  var self = this;\n\n  fs.readFile('/etc/resolv.conf', 'ascii', function(err, file) {\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n            break;\n        }\n      }\n    });\n\n    self._nsReady = true;\n    self._checkReady();\n  });\n};\n\nPlatform.prototype._parseHosts = function(hostsfile) {\n  var self = this;\n\n  fs.readFile(hostsfile, 'ascii', function(err, file) {\n    var toStore = {};\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function(domain) {\n            var r = toStore[revip];\n            if (!r)\n              r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t)\n              t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n\n          /* Domain -> IP */\n          parts.forEach(function(domain) {\n            var r = toStore[domain.toLowerCase()];\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t)\n              t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n    self._checkReady();\n  });\n};\n\nmodule.exports = new Platform();\n"]},"metadata":{},"sourceType":"script"}