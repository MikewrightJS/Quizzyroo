{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    question,\n    correct,\n    incorrect,\n    category,\n    handleQuestion,\n    playerAnswer,\n    questionComplete,\n    fiftyFifty\n  } = _ref;\n  return function (fiftyFifty) {\n    const [shuffAnswers, setShuffAnswers] = useState(false);\n    useEffect(() => {\n      playerAnswer ? updateAnswers() : fiftyFifty ? fiftyFifty() : shuffleAnswers();\n    }, [question, fiftyFifty, playerAnswer, questionComplete]);\n\n    function shuffleAnswers() {\n      let answers = incorrect.concat(correct);\n      const shuffledArray = answers.sort((a, b) => 0.5 - Math.random());\n      setShuffAnswers(shuffledArray.map(ans => ({\n        answer: ans,\n        class: 'answer__button'\n      })));\n    }\n\n    function fiftyFifty() {// let answers = [incorrect[Math.floor(Math.random() * 2)],correct]\n      // setShuffAnswers(answers.map(ans =>({\n      //   answer: ans,\n      //   class:'answer_button'\n      // })))\n    }\n\n    function updateAnswers() {\n      setShuffAnswers(oldAnswers => oldAnswers.map(ans => {\n        return ans.answer === correct ? { ...ans,\n          class: questionComplete ? 'answer__button green' : ans.answer === playerAnswer ? 'answer__button blue' : 'answer__button'\n        } : ans.answer === playerAnswer ? { ...ans,\n          class: 'answer__button blue'\n        } : ans;\n      }));\n    } // function updateAnswers(){\n    //   setShuffAnswers(oldAnswers => oldAnswers.map(ans => {\n    //     console.log(ans.answer === correct)\n    //     return {...ans, class: 'answer__button green'} \n    //   }))\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question__card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"question__category\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        dangerouslySetInnerHTML: {\n          __html: question\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: shuffAnswers && shuffAnswers.map(answer => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            dangerouslySetInnerHTML: {\n              __html: answer.answer\n            },\n            onClick: e => handleQuestion(e, answer.answer),\n            className: answer.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this);\n  }(fiftyFifty);\n}\n\n_s(Question, \"Gen1k37cQsb2u82T18BvFNAbb/k=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Question.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Switch","useState","Question","question","correct","incorrect","category","handleQuestion","playerAnswer","questionComplete","fiftyFifty","shuffAnswers","setShuffAnswers","updateAnswers","shuffleAnswers","answers","concat","shuffledArray","sort","a","b","Math","random","map","ans","answer","class","oldAnswers","__html","e"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\n\r\n\r\nfunction Question({question, correct, incorrect, category, handleQuestion, playerAnswer, questionComplete, fiftyFifty}) {\r\n\r\n  const [shuffAnswers, setShuffAnswers] = useState(false)\r\n  useEffect(() => {\r\n    playerAnswer ? \r\n      updateAnswers():\r\n    fiftyFifty?\r\n      fiftyFifty():\r\n    shuffleAnswers();\r\n\r\n},[question, fiftyFifty, playerAnswer,questionComplete])\r\n\r\n\r\nfunction shuffleAnswers(){\r\n  let answers = incorrect.concat(correct);\r\n  const shuffledArray = answers.sort((a, b) => 0.5 - Math.random());\r\n  setShuffAnswers(shuffledArray.map(ans=>({\r\n    answer:ans, \r\n    class: 'answer__button'\r\n  })))\r\n}\r\n\r\nfunction fiftyFifty(){\r\n  // let answers = [incorrect[Math.floor(Math.random() * 2)],correct]\r\n  // setShuffAnswers(answers.map(ans =>({\r\n  //   answer: ans,\r\n  //   class:'answer_button'\r\n  // })))\r\n}\r\n\r\nfunction updateAnswers(){\r\n  setShuffAnswers(oldAnswers => oldAnswers.map(ans => {\r\n    return ans.answer === correct ?\r\n    {...ans, class:questionComplete? 'answer__button green' : ans.answer === playerAnswer? 'answer__button blue' : 'answer__button'} :\r\n      ans.answer === playerAnswer ? \r\n        {...ans, class:'answer__button blue'} :\r\n        ans\r\n     \r\n}))\r\n}\r\n\r\n// function updateAnswers(){\r\n//   setShuffAnswers(oldAnswers => oldAnswers.map(ans => {\r\n//     console.log(ans.answer === correct)\r\n//     return {...ans, class: 'answer__button green'} \r\n//   }))\r\n// }\r\n\r\n\r\n\r\n\r\nreturn (\r\n      <div className=\"question__card\">\r\n      <h5 className=\"question__category\">{category}</h5>\r\n       \r\n          \r\n        <div className=\"question\" dangerouslySetInnerHTML ={{__html: question}}></div>\r\n        <div className=\"answers\">\r\n        {shuffAnswers && shuffAnswers.map(answer=>{\r\n            return <button dangerouslySetInnerHTML ={{__html: answer.answer}} \r\n            onClick={e => handleQuestion(e, answer.answer )} \r\n            className={answer.class}>\r\n                \r\n                </button>\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Question;"]},"metadata":{},"sourceType":"module"}