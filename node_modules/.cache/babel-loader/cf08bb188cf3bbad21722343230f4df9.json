{"ast":null,"code":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n'use strict';\n\nvar net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    UDPSocket = require('./utils').UDPSocket,\n    TCPSocket = require('./utils').TCPSocket;\n\nvar debug = function () {//var args = Array.prototype.slice.call(arguments);\n  //console.log.apply(this, ['pending', Date.now().toString()].concat(args));\n};\n\nvar SocketQueue = function (socket, server) {\n  this._active = {};\n  this._active_count = 0;\n  this._pending = [];\n  debug('created', server);\n  this._server = server;\n  this._socket = socket;\n\n  this._socket.on('ready', this._onlisten.bind(this));\n\n  this._socket.on('message', this._onmessage.bind(this));\n\n  this._socket.on('close', this._onclose.bind(this));\n\n  this._socket.bind(server);\n\n  this._refd = true;\n};\n\nutil.inherits(SocketQueue, EventEmitter);\n\nSocketQueue.prototype.send = function (request) {\n  debug('added', request.question);\n\n  this._pending.push(request);\n\n  this._fill();\n};\n\nSocketQueue.prototype.remove = function (request) {\n  var req = this._active[request.id];\n\n  var idx = this._pending.indexOf(request);\n\n  if (req) {\n    delete this._active[request.id];\n    this._active_count -= 1;\n\n    this._fill();\n  }\n\n  if (idx > -1) this._pending.splice(idx, 1);\n\n  this._unref();\n};\n\nSocketQueue.prototype.close = function () {\n  debug('closing', this._server);\n\n  this._socket.close();\n\n  this._socket = undefined;\n  this.emit('close');\n};\n\nSocketQueue.prototype._fill = function () {\n  debug('pre fill, active:', this._active_count, 'pending:', this._pending.length);\n\n  while (this._listening && this._pending.length && this._active_count < 100) {\n    this._dequeue();\n  }\n\n  debug('post fill, active:', this._active_count, 'pending:', this._pending.length);\n};\n\nvar random_integer = function () {\n  return Math.floor(Math.random() * 50000 + 1);\n};\n\nSocketQueue.prototype._dequeue = function () {\n  var req = this._pending.pop();\n\n  var id, packet, dnssocket;\n\n  if (req) {\n    id = random_integer();\n\n    while (this._active[id]) id = random_integer();\n\n    debug('sending', req.question, id);\n    req.id = id;\n    this._active[id] = req;\n    this._active_count += 1;\n\n    try {\n      packet = new Packet(this._socket.remote(req.server));\n      packet.header.id = id;\n      packet.header.rd = 1;\n\n      if (req.try_edns) {\n        packet.edns_version = 0; //TODO when we support dnssec\n        //packet.do = 1\n      }\n\n      packet.question.push(req.question);\n      packet.send();\n\n      this._ref();\n    } catch (e) {\n      req.error(e);\n    }\n  }\n};\n\nSocketQueue.prototype._onmessage = function (msg, remote) {\n  var req;\n  debug('got a message', this._server);\n\n  try {\n    var packet = Packet.parse(msg, remote);\n    req = this._active[packet.header.id];\n    debug('associated message', packet.header.id);\n  } catch (e) {\n    debug('error parsing packet', e);\n  }\n\n  if (req) {\n    delete this._active[packet.header.id];\n    this._active_count -= 1;\n    req.handle(null, packet);\n\n    this._fill();\n  }\n\n  this._unref();\n};\n\nSocketQueue.prototype._unref = function () {\n  var self = this;\n  this._refd = false;\n\n  if (this._active_count <= 0) {\n    if (this._socket.unref) {\n      debug('unrefd socket');\n\n      this._socket.unref();\n    } else if (!this._timer) {\n      this._timer = setTimeout(function () {\n        self.close();\n      }, 300);\n    }\n  }\n};\n\nSocketQueue.prototype._ref = function () {\n  this._refd = true;\n\n  if (this._socket.ref) {\n    debug('refd socket');\n\n    this._socket.ref();\n  } else if (this._timer) {\n    clearTimeout(this._timer);\n    this._timer = null;\n  }\n};\n\nSocketQueue.prototype._onlisten = function () {\n  this._unref();\n\n  this._listening = true;\n\n  this._fill();\n};\n\nSocketQueue.prototype._onclose = function () {\n  var req,\n      err,\n      self = this;\n  debug('socket closed', this);\n  this._listening = false;\n  err = new Error('getHostByName ' + consts.TIMEOUT);\n  err.errno = consts.TIMEOUT;\n\n  while (this._pending.length) {\n    req = this._pending.pop();\n    req.error(err);\n  }\n\n  Object.keys(this._active).forEach(function (key) {\n    var req = self._active[key];\n    req.error(err);\n    delete self._active[key];\n    self._active_count -= 1;\n  });\n};\n\nvar serverHash = function (server) {\n  if (server.type === 'tcp') return server.address + ':' + server.port;else return 'udp' + net.isIP(server.address);\n};\n\nvar _sockets = {};\n\nexports.send = function (request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (!socket) {\n    switch (hash) {\n      case 'udp4':\n      case 'udp6':\n        socket = new SocketQueue(new UDPSocket(), hash);\n        break;\n\n      default:\n        socket = new SocketQueue(new TCPSocket(), request.server);\n        break;\n    }\n\n    socket.on('close', function () {\n      delete _sockets[hash];\n    });\n    _sockets[hash] = socket;\n  }\n\n  socket.send(request);\n};\n\nexports.remove = function (request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (socket) {\n    socket.remove(request);\n  }\n};","map":{"version":3,"sources":["C:/react/quiz/node_modules/native-dns/lib/pending.js"],"names":["net","require","util","EventEmitter","Packet","consts","UDPSocket","TCPSocket","debug","SocketQueue","socket","server","_active","_active_count","_pending","_server","_socket","on","_onlisten","bind","_onmessage","_onclose","_refd","inherits","prototype","send","request","question","push","_fill","remove","req","id","idx","indexOf","splice","_unref","close","undefined","emit","length","_listening","_dequeue","random_integer","Math","floor","random","pop","packet","dnssocket","remote","header","rd","try_edns","edns_version","_ref","e","error","msg","parse","handle","self","unref","_timer","setTimeout","ref","clearTimeout","err","Error","TIMEOUT","errno","Object","keys","forEach","key","serverHash","type","address","port","isIP","_sockets","exports","hash"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CADlB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkBE,YAFrC;AAAA,IAGIC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAHpB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,mBAAD,CAAP,CAA6BI,MAJ1C;AAAA,IAKIC,SAAS,GAAGL,OAAO,CAAC,SAAD,CAAP,CAAmBK,SALnC;AAAA,IAMIC,SAAS,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBM,SANnC;;AAQA,IAAIC,KAAK,GAAG,YAAW,CACrB;AACA;AACD,CAHD;;AAKA,IAAIC,WAAW,GAAG,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACzC,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,aAAL,GAAqB,CAArB;AACA,OAAKC,QAAL,GAAgB,EAAhB;AAEAN,EAAAA,KAAK,CAAC,SAAD,EAAYG,MAAZ,CAAL;AAEA,OAAKI,OAAL,GAAeJ,MAAf;AAEA,OAAKK,OAAL,GAAeN,MAAf;;AACA,OAAKM,OAAL,CAAaC,EAAb,CAAgB,OAAhB,EAAyB,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAzB;;AACA,OAAKH,OAAL,CAAaC,EAAb,CAAgB,SAAhB,EAA2B,KAAKG,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAA3B;;AACA,OAAKH,OAAL,CAAaC,EAAb,CAAgB,OAAhB,EAAyB,KAAKI,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAzB;;AACA,OAAKH,OAAL,CAAaG,IAAb,CAAkBR,MAAlB;;AAEA,OAAKW,KAAL,GAAa,IAAb;AACD,CAhBD;;AAiBApB,IAAI,CAACqB,QAAL,CAAcd,WAAd,EAA2BN,YAA3B;;AAEAM,WAAW,CAACe,SAAZ,CAAsBC,IAAtB,GAA6B,UAASC,OAAT,EAAkB;AAC7ClB,EAAAA,KAAK,CAAC,OAAD,EAAUkB,OAAO,CAACC,QAAlB,CAAL;;AACA,OAAKb,QAAL,CAAcc,IAAd,CAAmBF,OAAnB;;AACA,OAAKG,KAAL;AACD,CAJD;;AAMApB,WAAW,CAACe,SAAZ,CAAsBM,MAAtB,GAA+B,UAASJ,OAAT,EAAkB;AAC/C,MAAIK,GAAG,GAAG,KAAKnB,OAAL,CAAac,OAAO,CAACM,EAArB,CAAV;;AACA,MAAIC,GAAG,GAAG,KAAKnB,QAAL,CAAcoB,OAAd,CAAsBR,OAAtB,CAAV;;AAEA,MAAIK,GAAJ,EAAS;AACP,WAAO,KAAKnB,OAAL,CAAac,OAAO,CAACM,EAArB,CAAP;AACA,SAAKnB,aAAL,IAAsB,CAAtB;;AACA,SAAKgB,KAAL;AACD;;AAED,MAAII,GAAG,GAAG,CAAC,CAAX,EACE,KAAKnB,QAAL,CAAcqB,MAAd,CAAqBF,GAArB,EAA0B,CAA1B;;AAEF,OAAKG,MAAL;AACD,CAdD;;AAgBA3B,WAAW,CAACe,SAAZ,CAAsBa,KAAtB,GAA8B,YAAW;AACvC7B,EAAAA,KAAK,CAAC,SAAD,EAAY,KAAKO,OAAjB,CAAL;;AACA,OAAKC,OAAL,CAAaqB,KAAb;;AACA,OAAKrB,OAAL,GAAesB,SAAf;AACA,OAAKC,IAAL,CAAU,OAAV;AACD,CALD;;AAOA9B,WAAW,CAACe,SAAZ,CAAsBK,KAAtB,GAA8B,YAAW;AACvCrB,EAAAA,KAAK,CAAC,mBAAD,EAAsB,KAAKK,aAA3B,EAA0C,UAA1C,EACC,KAAKC,QAAL,CAAc0B,MADf,CAAL;;AAGA,SAAO,KAAKC,UAAL,IAAmB,KAAK3B,QAAL,CAAc0B,MAAjC,IACA,KAAK3B,aAAL,GAAqB,GAD5B,EACiC;AAC/B,SAAK6B,QAAL;AACD;;AAEDlC,EAAAA,KAAK,CAAC,oBAAD,EAAuB,KAAKK,aAA5B,EAA2C,UAA3C,EACC,KAAKC,QAAL,CAAc0B,MADf,CAAL;AAED,CAXD;;AAaA,IAAIG,cAAc,GAAG,YAAW;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAhB,GAAwB,CAAnC,CAAP;AACD,CAFD;;AAIArC,WAAW,CAACe,SAAZ,CAAsBkB,QAAtB,GAAiC,YAAW;AAC1C,MAAIX,GAAG,GAAG,KAAKjB,QAAL,CAAciC,GAAd,EAAV;;AACA,MAAIf,EAAJ,EAAQgB,MAAR,EAAgBC,SAAhB;;AAEA,MAAIlB,GAAJ,EAAS;AACPC,IAAAA,EAAE,GAAGW,cAAc,EAAnB;;AAEA,WAAO,KAAK/B,OAAL,CAAaoB,EAAb,CAAP,EACEA,EAAE,GAAGW,cAAc,EAAnB;;AAEFnC,IAAAA,KAAK,CAAC,SAAD,EAAYuB,GAAG,CAACJ,QAAhB,EAA0BK,EAA1B,CAAL;AAEAD,IAAAA,GAAG,CAACC,EAAJ,GAASA,EAAT;AACA,SAAKpB,OAAL,CAAaoB,EAAb,IAAmBD,GAAnB;AACA,SAAKlB,aAAL,IAAsB,CAAtB;;AAEA,QAAI;AACFmC,MAAAA,MAAM,GAAG,IAAI5C,MAAJ,CAAW,KAAKY,OAAL,CAAakC,MAAb,CAAoBnB,GAAG,CAACpB,MAAxB,CAAX,CAAT;AACAqC,MAAAA,MAAM,CAACG,MAAP,CAAcnB,EAAd,GAAmBA,EAAnB;AACAgB,MAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,GAAmB,CAAnB;;AAEA,UAAIrB,GAAG,CAACsB,QAAR,EAAkB;AAChBL,QAAAA,MAAM,CAACM,YAAP,GAAsB,CAAtB,CADgB,CAEhB;AACA;AACD;;AAEDN,MAAAA,MAAM,CAACrB,QAAP,CAAgBC,IAAhB,CAAqBG,GAAG,CAACJ,QAAzB;AACAqB,MAAAA,MAAM,CAACvB,IAAP;;AAEA,WAAK8B,IAAL;AACD,KAfD,CAeE,OAAOC,CAAP,EAAU;AACVzB,MAAAA,GAAG,CAAC0B,KAAJ,CAAUD,CAAV;AACD;AACF;AACF,CAnCD;;AAqCA/C,WAAW,CAACe,SAAZ,CAAsBJ,UAAtB,GAAmC,UAASsC,GAAT,EAAcR,MAAd,EAAsB;AACvD,MAAInB,GAAJ;AAEAvB,EAAAA,KAAK,CAAC,eAAD,EAAkB,KAAKO,OAAvB,CAAL;;AAEA,MAAI;AACF,QAAIiC,MAAM,GAAG5C,MAAM,CAACuD,KAAP,CAAaD,GAAb,EAAkBR,MAAlB,CAAb;AACAnB,IAAAA,GAAG,GAAG,KAAKnB,OAAL,CAAaoC,MAAM,CAACG,MAAP,CAAcnB,EAA3B,CAAN;AACAxB,IAAAA,KAAK,CAAC,oBAAD,EAAuBwC,MAAM,CAACG,MAAP,CAAcnB,EAArC,CAAL;AACD,GAJD,CAIE,OAAOwB,CAAP,EAAU;AACVhD,IAAAA,KAAK,CAAC,sBAAD,EAAyBgD,CAAzB,CAAL;AACD;;AAED,MAAIzB,GAAJ,EAAS;AACP,WAAO,KAAKnB,OAAL,CAAaoC,MAAM,CAACG,MAAP,CAAcnB,EAA3B,CAAP;AACA,SAAKnB,aAAL,IAAsB,CAAtB;AACAkB,IAAAA,GAAG,CAAC6B,MAAJ,CAAW,IAAX,EAAiBZ,MAAjB;;AACA,SAAKnB,KAAL;AACD;;AAED,OAAKO,MAAL;AACD,CArBD;;AAuBA3B,WAAW,CAACe,SAAZ,CAAsBY,MAAtB,GAA+B,YAAW;AACxC,MAAIyB,IAAI,GAAG,IAAX;AACA,OAAKvC,KAAL,GAAa,KAAb;;AAEA,MAAI,KAAKT,aAAL,IAAsB,CAA1B,EAA6B;AAC3B,QAAI,KAAKG,OAAL,CAAa8C,KAAjB,EAAwB;AACtBtD,MAAAA,KAAK,CAAC,eAAD,CAAL;;AACA,WAAKQ,OAAL,CAAa8C,KAAb;AACD,KAHD,MAGO,IAAI,CAAC,KAAKC,MAAV,EAAkB;AACvB,WAAKA,MAAL,GAAcC,UAAU,CAAC,YAAW;AAClCH,QAAAA,IAAI,CAACxB,KAAL;AACD,OAFuB,EAErB,GAFqB,CAAxB;AAGD;AACF;AACF,CAdD;;AAgBA5B,WAAW,CAACe,SAAZ,CAAsB+B,IAAtB,GAA6B,YAAW;AACtC,OAAKjC,KAAL,GAAa,IAAb;;AACA,MAAI,KAAKN,OAAL,CAAaiD,GAAjB,EAAsB;AACpBzD,IAAAA,KAAK,CAAC,aAAD,CAAL;;AACA,SAAKQ,OAAL,CAAaiD,GAAb;AACD,GAHD,MAGO,IAAI,KAAKF,MAAT,EAAiB;AACtBG,IAAAA,YAAY,CAAC,KAAKH,MAAN,CAAZ;AACA,SAAKA,MAAL,GAAc,IAAd;AACD;AACF,CATD;;AAWAtD,WAAW,CAACe,SAAZ,CAAsBN,SAAtB,GAAkC,YAAW;AAC3C,OAAKkB,MAAL;;AACA,OAAKK,UAAL,GAAkB,IAAlB;;AACA,OAAKZ,KAAL;AACD,CAJD;;AAMApB,WAAW,CAACe,SAAZ,CAAsBH,QAAtB,GAAiC,YAAW;AAC1C,MAAIU,GAAJ;AAAA,MAASoC,GAAT;AAAA,MAAcN,IAAI,GAAG,IAArB;AAEArD,EAAAA,KAAK,CAAC,eAAD,EAAkB,IAAlB,CAAL;AAEA,OAAKiC,UAAL,GAAkB,KAAlB;AAEA0B,EAAAA,GAAG,GAAG,IAAIC,KAAJ,CAAU,mBAAmB/D,MAAM,CAACgE,OAApC,CAAN;AACAF,EAAAA,GAAG,CAACG,KAAJ,GAAYjE,MAAM,CAACgE,OAAnB;;AAEA,SAAO,KAAKvD,QAAL,CAAc0B,MAArB,EAA6B;AAC3BT,IAAAA,GAAG,GAAG,KAAKjB,QAAL,CAAciC,GAAd,EAAN;AACAhB,IAAAA,GAAG,CAAC0B,KAAJ,CAAUU,GAAV;AACD;;AAEDI,EAAAA,MAAM,CAACC,IAAP,CAAY,KAAK5D,OAAjB,EAA0B6D,OAA1B,CAAkC,UAASC,GAAT,EAAc;AAC9C,QAAI3C,GAAG,GAAG8B,IAAI,CAACjD,OAAL,CAAa8D,GAAb,CAAV;AACA3C,IAAAA,GAAG,CAAC0B,KAAJ,CAAUU,GAAV;AACA,WAAON,IAAI,CAACjD,OAAL,CAAa8D,GAAb,CAAP;AACAb,IAAAA,IAAI,CAAChD,aAAL,IAAsB,CAAtB;AACD,GALD;AAMD,CArBD;;AAuBA,IAAI8D,UAAU,GAAG,UAAShE,MAAT,EAAiB;AAChC,MAAIA,MAAM,CAACiE,IAAP,KAAgB,KAApB,EACE,OAAOjE,MAAM,CAACkE,OAAP,GAAiB,GAAjB,GAAuBlE,MAAM,CAACmE,IAArC,CADF,KAGE,OAAO,QAAQ9E,GAAG,CAAC+E,IAAJ,CAASpE,MAAM,CAACkE,OAAhB,CAAf;AACH,CALD;;AAOA,IAAIG,QAAQ,GAAG,EAAf;;AAEAC,OAAO,CAACxD,IAAR,GAAe,UAASC,OAAT,EAAkB;AAC/B,MAAIwD,IAAI,GAAGP,UAAU,CAACjD,OAAO,CAACf,MAAT,CAArB;AACA,MAAID,MAAM,GAAGsE,QAAQ,CAACE,IAAD,CAArB;;AAEA,MAAI,CAACxE,MAAL,EAAa;AACX,YAAQwE,IAAR;AACE,WAAK,MAAL;AACA,WAAK,MAAL;AACExE,QAAAA,MAAM,GAAG,IAAID,WAAJ,CAAgB,IAAIH,SAAJ,EAAhB,EAAiC4E,IAAjC,CAAT;AACA;;AACF;AACExE,QAAAA,MAAM,GAAG,IAAID,WAAJ,CAAgB,IAAIF,SAAJ,EAAhB,EAAiCmB,OAAO,CAACf,MAAzC,CAAT;AACA;AAPJ;;AAUAD,IAAAA,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,aAAO+D,QAAQ,CAACE,IAAD,CAAf;AACD,KAFD;AAIAF,IAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBxE,MAAjB;AACD;;AAEDA,EAAAA,MAAM,CAACe,IAAP,CAAYC,OAAZ;AACD,CAvBD;;AAyBAuD,OAAO,CAACnD,MAAR,GAAiB,UAASJ,OAAT,EAAkB;AACjC,MAAIwD,IAAI,GAAGP,UAAU,CAACjD,OAAO,CAACf,MAAT,CAArB;AACA,MAAID,MAAM,GAAGsE,QAAQ,CAACE,IAAD,CAArB;;AACA,MAAIxE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACoB,MAAP,CAAcJ,OAAd;AACD;AACF,CAND","sourcesContent":["// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    UDPSocket = require('./utils').UDPSocket,\n    TCPSocket = require('./utils').TCPSocket;\n\nvar debug = function() {\n  //var args = Array.prototype.slice.call(arguments);\n  //console.log.apply(this, ['pending', Date.now().toString()].concat(args));\n};\n\nvar SocketQueue = function(socket, server) {\n  this._active = {};\n  this._active_count = 0;\n  this._pending = [];\n\n  debug('created', server);\n\n  this._server = server;\n\n  this._socket = socket;\n  this._socket.on('ready', this._onlisten.bind(this));\n  this._socket.on('message', this._onmessage.bind(this));\n  this._socket.on('close', this._onclose.bind(this));\n  this._socket.bind(server);\n\n  this._refd = true;\n};\nutil.inherits(SocketQueue, EventEmitter);\n\nSocketQueue.prototype.send = function(request) {\n  debug('added', request.question);\n  this._pending.push(request);\n  this._fill();\n};\n\nSocketQueue.prototype.remove = function(request) {\n  var req = this._active[request.id];\n  var idx = this._pending.indexOf(request);\n\n  if (req) {\n    delete this._active[request.id];\n    this._active_count -= 1;\n    this._fill();\n  }\n\n  if (idx > -1)\n    this._pending.splice(idx, 1);\n\n  this._unref();\n};\n\nSocketQueue.prototype.close = function() {\n  debug('closing', this._server);\n  this._socket.close();\n  this._socket = undefined;\n  this.emit('close');\n};\n\nSocketQueue.prototype._fill = function() {\n  debug('pre fill, active:', this._active_count, 'pending:',\n        this._pending.length);\n\n  while (this._listening && this._pending.length &&\n         this._active_count < 100) {\n    this._dequeue();\n  }\n\n  debug('post fill, active:', this._active_count, 'pending:',\n        this._pending.length);\n};\n\nvar random_integer = function() {\n  return Math.floor(Math.random() * 50000 + 1);\n};\n\nSocketQueue.prototype._dequeue = function() {\n  var req = this._pending.pop();\n  var id, packet, dnssocket;\n\n  if (req) {\n    id = random_integer();\n\n    while (this._active[id])\n      id = random_integer();\n\n    debug('sending', req.question, id);\n\n    req.id = id;\n    this._active[id] = req;\n    this._active_count += 1;\n\n    try {\n      packet = new Packet(this._socket.remote(req.server));\n      packet.header.id = id;\n      packet.header.rd = 1;\n\n      if (req.try_edns) {\n        packet.edns_version = 0;\n        //TODO when we support dnssec\n        //packet.do = 1\n      }\n\n      packet.question.push(req.question);\n      packet.send();\n\n      this._ref();\n    } catch (e) {\n      req.error(e);\n    }\n  }\n};\n\nSocketQueue.prototype._onmessage = function(msg, remote) {\n  var req;\n\n  debug('got a message', this._server);\n\n  try {\n    var packet = Packet.parse(msg, remote);\n    req = this._active[packet.header.id];\n    debug('associated message', packet.header.id);\n  } catch (e) {\n    debug('error parsing packet', e);\n  }\n\n  if (req) {\n    delete this._active[packet.header.id];\n    this._active_count -= 1;\n    req.handle(null, packet);\n    this._fill();\n  }\n\n  this._unref();\n};\n\nSocketQueue.prototype._unref = function() {\n  var self = this;\n  this._refd = false;\n\n  if (this._active_count <= 0) {\n    if (this._socket.unref) {\n      debug('unrefd socket');\n      this._socket.unref();\n    } else if (!this._timer) {\n      this._timer = setTimeout(function() {\n        self.close();\n      }, 300);\n    }\n  }\n};\n\nSocketQueue.prototype._ref = function() {\n  this._refd = true;\n  if (this._socket.ref) {\n    debug('refd socket');\n    this._socket.ref();\n  } else if (this._timer) {\n    clearTimeout(this._timer);\n    this._timer = null;\n  }\n};\n\nSocketQueue.prototype._onlisten = function() {\n  this._unref();\n  this._listening = true;\n  this._fill();\n};\n\nSocketQueue.prototype._onclose = function() {\n  var req, err, self = this;\n\n  debug('socket closed', this);\n\n  this._listening = false;\n\n  err = new Error('getHostByName ' + consts.TIMEOUT);\n  err.errno = consts.TIMEOUT;\n\n  while (this._pending.length) {\n    req = this._pending.pop();\n    req.error(err);\n  }\n\n  Object.keys(this._active).forEach(function(key) {\n    var req = self._active[key];\n    req.error(err);\n    delete self._active[key];\n    self._active_count -= 1;\n  });\n};\n\nvar serverHash = function(server) {\n  if (server.type === 'tcp')\n    return server.address + ':' + server.port;\n  else\n    return 'udp' + net.isIP(server.address);\n};\n\nvar _sockets = {};\n\nexports.send = function(request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (!socket) {\n    switch (hash) {\n      case 'udp4':\n      case 'udp6':\n        socket = new SocketQueue(new UDPSocket(), hash);\n        break;\n      default:\n        socket = new SocketQueue(new TCPSocket(), request.server);\n        break;\n    }\n\n    socket.on('close', function() {\n      delete _sockets[hash];\n    });\n\n    _sockets[hash] = socket;\n  }\n\n  socket.send(request);\n};\n\nexports.remove = function(request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n  if (socket) {\n    socket.remove(request);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}