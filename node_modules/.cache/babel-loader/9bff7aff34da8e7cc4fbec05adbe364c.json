{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz\\\\src\\\\components\\\\Question.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  let {\n    question,\n    correct,\n    incorrect,\n    category,\n    handleQuestion,\n    id\n  } = _ref;\n  let answers = incorrect.concat(correct);\n  let playerAnswer = playersAnswers[{\n    id\n  }].answer;\n  const styles = {\n    backgroundColor: {\n      playersAnswers\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: JSON.stringify(question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers.map(answer => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles,\n          onClick: e => handleQuestion(e, answer, id),\n          class: \"answer\",\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/react/quiz/src/components/Question.js"],"names":["React","BrowserRouter","Router","Route","Switch","Question","question","correct","incorrect","category","handleQuestion","id","answers","concat","playerAnswer","playersAnswers","answer","styles","backgroundColor","JSON","stringify","map","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;;;AAGA,SAASC,QAAT,OAAgF;AAAA,MAA9D;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,cAAzC;AAAyDC,IAAAA;AAAzD,GAA8D;AAC5E,MAAIC,OAAO,GAAGJ,SAAS,CAACK,MAAV,CAAiBN,OAAjB,CAAd;AACA,MAAIO,YAAY,GAAGC,cAAc,CAAC;AAACJ,IAAAA;AAAD,GAAD,CAAd,CAAqBK,MAAxC;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,eAAe,EAAC;AAACH,MAAAA;AAAD;AADL,GAAf;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAA,gBAAKU,IAAI,CAACC,SAAL,CAAed,QAAf;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACCM,OAAO,CAACS,GAAR,CAAYL,MAAM,IAAE;AACjB,4BAAO;AAAQ,UAAA,KAAK,EAAEC,MAAf;AAAsB,UAAA,OAAO,EAAEK,CAAC,IAAIZ,cAAc,CAACY,CAAD,EAAIN,MAAJ,EAAYL,EAAZ,CAAlD;AAAoE,UAAA,KAAK,EAAC,QAA1E;AAAA,oBAAoFK;AAApF;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAjBMX,Q;AAmBP,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction Question({question, correct, incorrect, category, handleQuestion, id}) {\r\n    let answers = incorrect.concat(correct);\r\n    let playerAnswer = playersAnswers[{id}].answer\r\n    const styles = {\r\n        backgroundColor:{playersAnswers}\r\n    }\r\n    return (\r\n      <div className=\"question\">\r\n          <h3>{category}</h3>\r\n        <h4>{JSON.stringify(question)}</h4>\r\n        <div className=\"answers\">\r\n        {answers.map(answer=>{\r\n            return <button style={styles}onClick={e => handleQuestion(e, answer, id )} class=\"answer\">{answer}</button>\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Question;"]},"metadata":{},"sourceType":"module"}